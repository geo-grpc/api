// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/query.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
//Not currently in use
type SortDirection int32

const (
	SortDirection_NOT_SORTED SortDirection = 0
	SortDirection_DESC       SortDirection = 1
	SortDirection_ASC        SortDirection = 2
)

var SortDirection_name = map[int32]string{
	0: "NOT_SORTED",
	1: "DESC",
	2: "ASC",
}

var SortDirection_value = map[string]int32{
	"NOT_SORTED": 0,
	"DESC":       1,
	"ASC":        2,
}

func (x SortDirection) String() string {
	return proto.EnumName(SortDirection_name, int32(x))
}

func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{0}
}

//
//Default Value is equals, `EQ`, so if you don't set rel_type, it is assumed you mean equals.
type FieldRelationship int32

const (
	FieldRelationship_EQ          FieldRelationship = 0
	FieldRelationship_LT_OR_EQ    FieldRelationship = 2
	FieldRelationship_GT_OR_EQ    FieldRelationship = 4
	FieldRelationship_LT          FieldRelationship = 8
	FieldRelationship_GT          FieldRelationship = 16
	FieldRelationship_BETWEEN     FieldRelationship = 32
	FieldRelationship_NOT_BETWEEN FieldRelationship = 64
	FieldRelationship_NOT_EQ      FieldRelationship = 128
	FieldRelationship_IN          FieldRelationship = 256
	FieldRelationship_NOT_IN      FieldRelationship = 512
	FieldRelationship_LIKE        FieldRelationship = 1024
	FieldRelationship_NOT_LIKE    FieldRelationship = 2048
)

var FieldRelationship_name = map[int32]string{
	0:    "EQ",
	2:    "LT_OR_EQ",
	4:    "GT_OR_EQ",
	8:    "LT",
	16:   "GT",
	32:   "BETWEEN",
	64:   "NOT_BETWEEN",
	128:  "NOT_EQ",
	256:  "IN",
	512:  "NOT_IN",
	1024: "LIKE",
	2048: "NOT_LIKE",
}

var FieldRelationship_value = map[string]int32{
	"EQ":          0,
	"LT_OR_EQ":    2,
	"GT_OR_EQ":    4,
	"LT":          8,
	"GT":          16,
	"BETWEEN":     32,
	"NOT_BETWEEN": 64,
	"NOT_EQ":      128,
	"IN":          256,
	"NOT_IN":      512,
	"LIKE":        1024,
	"NOT_LIKE":    2048,
}

func (x FieldRelationship) String() string {
	return proto.EnumName(FieldRelationship_name, int32(x))
}

func (FieldRelationship) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{1}
}

//
//Query language for float fields.
type FloatField struct {
	//
	//Singular float value that, combined with rel_type, allows you to search for floats that relate to this `value`.
	//`value` field cannot be combined with BETWEEN or the NOT_BETWEEN FieldRelationship `rel_type`. That means
	//you can use the EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ FieldRelationship `rel_type`
	Value float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	//
	//relationship type of the query.
	//EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ for `value`
	//BETWEEN or NOT_BETWEEN for `start` with `stop`
	//IN or NOT_IN for use with `set`
	RelType FieldRelationship `protobuf:"varint,2,opt,name=rel_type,json=relType,proto3,enum=epl.protobuf.FieldRelationship" json:"rel_type,omitempty"`
	//
	//For searching by a range. `start` with BETWEEN searches for everything in the range from `start` to `stop`
	//`start` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `stop` value
	Start float32 `protobuf:"fixed32,3,opt,name=start,proto3" json:"start,omitempty"`
	//
	//For searching by a range. `stop` with BETWEEN searches for everything in the range from `start` to `stop`
	//`stop` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `start` value
	Stop float32 `protobuf:"fixed32,4,opt,name=stop,proto3" json:"stop,omitempty"`
	//
	//sort direction for the return values
	SortDirection SortDirection `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,proto3,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	//
	//'IN' or 'NOT IN' sql operations
	Set                  []float32 `protobuf:"fixed32,6,rep,packed,name=set,proto3" json:"set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FloatField) Reset()         { *m = FloatField{} }
func (m *FloatField) String() string { return proto.CompactTextString(m) }
func (*FloatField) ProtoMessage()    {}
func (*FloatField) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{0}
}

func (m *FloatField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatField.Unmarshal(m, b)
}
func (m *FloatField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatField.Marshal(b, m, deterministic)
}
func (m *FloatField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatField.Merge(m, src)
}
func (m *FloatField) XXX_Size() int {
	return xxx_messageInfo_FloatField.Size(m)
}
func (m *FloatField) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatField.DiscardUnknown(m)
}

var xxx_messageInfo_FloatField proto.InternalMessageInfo

func (m *FloatField) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *FloatField) GetRelType() FieldRelationship {
	if m != nil {
		return m.RelType
	}
	return FieldRelationship_EQ
}

func (m *FloatField) GetStart() float32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *FloatField) GetStop() float32 {
	if m != nil {
		return m.Stop
	}
	return 0
}

func (m *FloatField) GetSortDirection() SortDirection {
	if m != nil {
		return m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

func (m *FloatField) GetSet() []float32 {
	if m != nil {
		return m.Set
	}
	return nil
}

type DoubleField struct {
	//
	//Singular double value that, combined with rel_type, allows you to search for floats that relate to this `value`.
	//`value` field cannot be combined with BETWEEN or the NOT_BETWEEN FieldRelationship `rel_type`. That means
	//you can use the EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ FieldRelationship `rel_type`
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	//
	//relationship type of the query.
	//EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ for `value`
	//BETWEEN or NOT_BETWEEN for `start` with `stop`
	//IN or NOT_IN for use with `set`
	RelType FieldRelationship `protobuf:"varint,2,opt,name=rel_type,json=relType,proto3,enum=epl.protobuf.FieldRelationship" json:"rel_type,omitempty"`
	//
	//For searching by a range. `start` with BETWEEN searches for everything in the range from `start` to `stop`
	//`start` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `stop` value
	Start float64 `protobuf:"fixed64,3,opt,name=start,proto3" json:"start,omitempty"`
	//
	//For searching by a range. `stop` with BETWEEN searches for everything in the range from `start` to `stop`
	//`stop` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `start` value
	Stop float64 `protobuf:"fixed64,4,opt,name=stop,proto3" json:"stop,omitempty"`
	//
	//sort direction for the return values
	SortDirection SortDirection `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,proto3,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	//
	//'IN' or 'NOT IN' sql operations
	Set                  []float64 `protobuf:"fixed64,6,rep,packed,name=set,proto3" json:"set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DoubleField) Reset()         { *m = DoubleField{} }
func (m *DoubleField) String() string { return proto.CompactTextString(m) }
func (*DoubleField) ProtoMessage()    {}
func (*DoubleField) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{1}
}

func (m *DoubleField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubleField.Unmarshal(m, b)
}
func (m *DoubleField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubleField.Marshal(b, m, deterministic)
}
func (m *DoubleField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubleField.Merge(m, src)
}
func (m *DoubleField) XXX_Size() int {
	return xxx_messageInfo_DoubleField.Size(m)
}
func (m *DoubleField) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubleField.DiscardUnknown(m)
}

var xxx_messageInfo_DoubleField proto.InternalMessageInfo

func (m *DoubleField) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DoubleField) GetRelType() FieldRelationship {
	if m != nil {
		return m.RelType
	}
	return FieldRelationship_EQ
}

func (m *DoubleField) GetStart() float64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *DoubleField) GetStop() float64 {
	if m != nil {
		return m.Stop
	}
	return 0
}

func (m *DoubleField) GetSortDirection() SortDirection {
	if m != nil {
		return m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

func (m *DoubleField) GetSet() []float64 {
	if m != nil {
		return m.Set
	}
	return nil
}

type TimestampField struct {
	//
	//Singular Timestamp value that, combined with rel_type, allows you to search for floats that relate to this `value`.
	//`value` field cannot be combined with BETWEEN or the NOT_BETWEEN FieldRelationship `rel_type`. That means
	//you can use the EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ FieldRelationship `rel_type`
	Value *timestamp.Timestamp `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	//
	//relationship type of the query.
	//EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ for `value`
	//BETWEEN or NOT_BETWEEN for `start` with `stop`
	RelType FieldRelationship `protobuf:"varint,2,opt,name=rel_type,json=relType,proto3,enum=epl.protobuf.FieldRelationship" json:"rel_type,omitempty"`
	//
	//For searching by a range. `start` with BETWEEN searches for everything in the range from `start` to `stop`
	//`start` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `stop` value
	Start *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	//
	//For searching by a range. `stop` with BETWEEN searches for everything in the range from `start` to `stop`
	//`stop` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `start` value
	Stop *timestamp.Timestamp `protobuf:"bytes,4,opt,name=stop,proto3" json:"stop,omitempty"`
	//
	//sort direction for the return values
	SortDirection        SortDirection `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,proto3,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TimestampField) Reset()         { *m = TimestampField{} }
func (m *TimestampField) String() string { return proto.CompactTextString(m) }
func (*TimestampField) ProtoMessage()    {}
func (*TimestampField) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{2}
}

func (m *TimestampField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampField.Unmarshal(m, b)
}
func (m *TimestampField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampField.Marshal(b, m, deterministic)
}
func (m *TimestampField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampField.Merge(m, src)
}
func (m *TimestampField) XXX_Size() int {
	return xxx_messageInfo_TimestampField.Size(m)
}
func (m *TimestampField) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampField.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampField proto.InternalMessageInfo

func (m *TimestampField) GetValue() *timestamp.Timestamp {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TimestampField) GetRelType() FieldRelationship {
	if m != nil {
		return m.RelType
	}
	return FieldRelationship_EQ
}

func (m *TimestampField) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *TimestampField) GetStop() *timestamp.Timestamp {
	if m != nil {
		return m.Stop
	}
	return nil
}

func (m *TimestampField) GetSortDirection() SortDirection {
	if m != nil {
		return m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

type UInt32Field struct {
	//
	//Singular unint32 value that, combined with rel_type, allows you to search for floats that relate to this `value`.
	//`value` field cannot be combined with BETWEEN or the NOT_BETWEEN FieldRelationship `rel_type`. That means
	//you can use the EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ FieldRelationship `rel_type`
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	//
	//relationship type of the query.
	//EQ, LT_OR_EQ, GT_OR_EQ, LT, GT, NOT_EQ for `value`
	//BETWEEN or NOT_BETWEEN for `start` with `stop`
	//IN or NOT_IN for use with `set`
	RelType FieldRelationship `protobuf:"varint,2,opt,name=rel_type,json=relType,proto3,enum=epl.protobuf.FieldRelationship" json:"rel_type,omitempty"`
	//
	//For searching by a range. `start` with BETWEEN searches for everything in the range from `start` to `stop`
	//`start` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `stop` value
	Start uint32 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	//
	//For searching by a range. `stop` with BETWEEN searches for everything in the range from `start` to `stop`
	//`stop` with NOT_BETWEEN searches for everything not in the range from `start` and `stop`. must be accompanied
	//by a `start` value
	Stop uint32 `protobuf:"varint,4,opt,name=stop,proto3" json:"stop,omitempty"`
	//
	//sort direction for the return values
	SortDirection SortDirection `protobuf:"varint,5,opt,name=sort_direction,json=sortDirection,proto3,enum=epl.protobuf.SortDirection" json:"sort_direction,omitempty"`
	//
	//'IN' or 'NOT IN' sql operations
	Set                  []uint32 `protobuf:"varint,6,rep,packed,name=set,proto3" json:"set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UInt32Field) Reset()         { *m = UInt32Field{} }
func (m *UInt32Field) String() string { return proto.CompactTextString(m) }
func (*UInt32Field) ProtoMessage()    {}
func (*UInt32Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{3}
}

func (m *UInt32Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UInt32Field.Unmarshal(m, b)
}
func (m *UInt32Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UInt32Field.Marshal(b, m, deterministic)
}
func (m *UInt32Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UInt32Field.Merge(m, src)
}
func (m *UInt32Field) XXX_Size() int {
	return xxx_messageInfo_UInt32Field.Size(m)
}
func (m *UInt32Field) XXX_DiscardUnknown() {
	xxx_messageInfo_UInt32Field.DiscardUnknown(m)
}

var xxx_messageInfo_UInt32Field proto.InternalMessageInfo

func (m *UInt32Field) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *UInt32Field) GetRelType() FieldRelationship {
	if m != nil {
		return m.RelType
	}
	return FieldRelationship_EQ
}

func (m *UInt32Field) GetStart() uint32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *UInt32Field) GetStop() uint32 {
	if m != nil {
		return m.Stop
	}
	return 0
}

func (m *UInt32Field) GetSortDirection() SortDirection {
	if m != nil {
		return m.SortDirection
	}
	return SortDirection_NOT_SORTED
}

func (m *UInt32Field) GetSet() []uint32 {
	if m != nil {
		return m.Set
	}
	return nil
}

type StringField struct {
	//
	//for use with EQ, NOT_EQ, LIKE and NOT_LIKE
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	//
	//relationship type of the query.
	//EQ, NOT_EQ for `value`
	//IN or NOT_IN for use with `set`
	//LIKE or NOT_LIKE test if the string in `value` matches or does not match the supplied pattern
	RelType FieldRelationship `protobuf:"varint,2,opt,name=rel_type,json=relType,proto3,enum=epl.protobuf.FieldRelationship" json:"rel_type,omitempty"`
	//
	//For use with 'IN' or 'NOT IN' sql operations
	Set                  []string `protobuf:"bytes,6,rep,name=set,proto3" json:"set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringField) Reset()         { *m = StringField{} }
func (m *StringField) String() string { return proto.CompactTextString(m) }
func (*StringField) ProtoMessage()    {}
func (*StringField) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d1ba7339271b6f, []int{4}
}

func (m *StringField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringField.Unmarshal(m, b)
}
func (m *StringField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringField.Marshal(b, m, deterministic)
}
func (m *StringField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringField.Merge(m, src)
}
func (m *StringField) XXX_Size() int {
	return xxx_messageInfo_StringField.Size(m)
}
func (m *StringField) XXX_DiscardUnknown() {
	xxx_messageInfo_StringField.DiscardUnknown(m)
}

var xxx_messageInfo_StringField proto.InternalMessageInfo

func (m *StringField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *StringField) GetRelType() FieldRelationship {
	if m != nil {
		return m.RelType
	}
	return FieldRelationship_EQ
}

func (m *StringField) GetSet() []string {
	if m != nil {
		return m.Set
	}
	return nil
}

func init() {
	proto.RegisterEnum("epl.protobuf.SortDirection", SortDirection_name, SortDirection_value)
	proto.RegisterEnum("epl.protobuf.FieldRelationship", FieldRelationship_name, FieldRelationship_value)
	proto.RegisterType((*FloatField)(nil), "epl.protobuf.FloatField")
	proto.RegisterType((*DoubleField)(nil), "epl.protobuf.DoubleField")
	proto.RegisterType((*TimestampField)(nil), "epl.protobuf.TimestampField")
	proto.RegisterType((*UInt32Field)(nil), "epl.protobuf.UInt32Field")
	proto.RegisterType((*StringField)(nil), "epl.protobuf.StringField")
}

func init() { proto.RegisterFile("epl/protobuf/query.proto", fileDescriptor_18d1ba7339271b6f) }

var fileDescriptor_18d1ba7339271b6f = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0x9b, 0x30,
	0x1c, 0xad, 0x09, 0x4d, 0xc8, 0x8f, 0x92, 0x79, 0xd6, 0x0e, 0xa8, 0x3b, 0x34, 0xea, 0x29, 0xea,
	0x34, 0xa8, 0xd2, 0xdb, 0x4e, 0x5b, 0x1a, 0x5a, 0x45, 0x8b, 0xf2, 0x07, 0x98, 0x26, 0xed, 0x12,
	0x91, 0xd4, 0xa3, 0x48, 0x4e, 0x4c, 0x8d, 0x33, 0x29, 0xb7, 0x7c, 0x96, 0x6a, 0x9f, 0x6b, 0xfb,
	0x2a, 0x93, 0x41, 0xac, 0x44, 0x8b, 0xd6, 0x4b, 0x7a, 0xc2, 0xef, 0xc7, 0xb3, 0x1f, 0xef, 0xf1,
	0x64, 0xb0, 0x69, 0xca, 0xdc, 0x54, 0x70, 0xc9, 0xe7, 0xeb, 0xef, 0xee, 0xc3, 0x9a, 0x8a, 0x8d,
	0x93, 0x43, 0x72, 0x42, 0x53, 0xe6, 0x94, 0x6f, 0x4e, 0xcf, 0x62, 0xce, 0x63, 0x46, 0x9f, 0xa8,
	0x32, 0x59, 0xd2, 0x4c, 0x46, 0xcb, 0xb4, 0xe0, 0x9c, 0xff, 0x42, 0x00, 0x37, 0x8c, 0x47, 0xf2,
	0x26, 0xa1, 0xec, 0x8e, 0xbc, 0x81, 0xe3, 0x1f, 0x11, 0x5b, 0x53, 0x1b, 0xb5, 0x51, 0x47, 0xf3,
	0x0b, 0x40, 0x3e, 0x80, 0x21, 0x28, 0x9b, 0xc9, 0x4d, 0x4a, 0x6d, 0xad, 0x8d, 0x3a, 0xad, 0xee,
	0x99, 0x53, 0x95, 0x71, 0xf2, 0xcd, 0x3e, 0x65, 0x91, 0x4c, 0xf8, 0x2a, 0xbb, 0x4f, 0x52, 0xbf,
	0x21, 0x28, 0x0b, 0x37, 0x29, 0x55, 0x27, 0x66, 0x32, 0x12, 0xd2, 0xae, 0x15, 0x27, 0xe6, 0x80,
	0x10, 0xd0, 0x33, 0xc9, 0x53, 0x5b, 0xcf, 0x87, 0xf9, 0x9a, 0xf4, 0xa0, 0x95, 0x71, 0x21, 0x67,
	0x77, 0x89, 0xa0, 0x0b, 0x75, 0x90, 0x7d, 0x9c, 0x6b, 0xbd, 0xdd, 0xd5, 0x0a, 0xb8, 0x90, 0xfd,
	0x92, 0xe2, 0x5b, 0x59, 0x15, 0x12, 0x0c, 0xb5, 0x8c, 0x4a, 0xbb, 0xde, 0xae, 0x75, 0x34, 0x5f,
	0x2d, 0xcf, 0x7f, 0x23, 0x30, 0xfb, 0x7c, 0x3d, 0x67, 0x74, 0x8f, 0x43, 0x74, 0x70, 0x87, 0x68,
	0x9f, 0x43, 0xf4, 0x32, 0x0e, 0x51, 0xe1, 0xf0, 0xa7, 0x06, 0xad, 0xb0, 0xfc, 0xad, 0x85, 0xc9,
	0xcb, 0xaa, 0x49, 0xb3, 0x7b, 0xea, 0x14, 0x35, 0x78, 0x92, 0xf8, 0xcb, 0x3f, 0x44, 0x00, 0x97,
	0xd5, 0x00, 0x9e, 0x51, 0x2b, 0xc2, 0x71, 0x2a, 0xe1, 0xfc, 0x7f, 0xc3, 0xc1, 0x82, 0xcb, 0x8b,
	0xf0, 0x65, 0xb0, 0x92, 0x57, 0xdd, 0x3d, 0x45, 0xb0, 0x0e, 0x5e, 0x04, 0x6b, 0x5f, 0x11, 0xac,
	0x97, 0x29, 0x82, 0x55, 0x14, 0xe1, 0x01, 0xcc, 0x40, 0x8a, 0x64, 0x15, 0xef, 0x31, 0xd8, 0x3c,
	0x84, 0xc1, 0x8a, 0x64, 0x33, 0x97, 0xbc, 0xe8, 0x82, 0xb5, 0xf3, 0x91, 0xa4, 0x05, 0x30, 0x1a,
	0x87, 0xb3, 0x60, 0xec, 0x87, 0x5e, 0x1f, 0x1f, 0x11, 0x03, 0xf4, 0xbe, 0x17, 0x5c, 0x63, 0x44,
	0x1a, 0x50, 0xfb, 0x14, 0x5c, 0x63, 0xed, 0xe2, 0x11, 0xc1, 0xeb, 0x7f, 0x44, 0x48, 0x1d, 0x34,
	0x6f, 0x8a, 0x8f, 0xc8, 0x09, 0x18, 0xc3, 0x70, 0x36, 0xf6, 0x67, 0xde, 0x14, 0x6b, 0x0a, 0xdd,
	0x96, 0x48, 0x57, 0x9c, 0x61, 0x88, 0x0d, 0xf5, 0xbc, 0x0d, 0x31, 0x26, 0x26, 0x34, 0x7a, 0x5e,
	0xf8, 0xd5, 0xf3, 0x46, 0xb8, 0x4d, 0x5e, 0x81, 0xa9, 0x94, 0xcb, 0xc1, 0x47, 0x62, 0x42, 0x5d,
	0x0d, 0xbc, 0x29, 0xde, 0x2a, 0x75, 0x6d, 0x30, 0xc2, 0x5b, 0xad, 0x9c, 0x2a, 0xa0, 0x93, 0x26,
	0xe8, 0xc3, 0xc1, 0x67, 0x0f, 0x6f, 0x0d, 0x62, 0x81, 0xa1, 0xe6, 0x05, 0xc4, 0xbd, 0x00, 0xf0,
	0x82, 0x2f, 0x77, 0x92, 0xe9, 0xc1, 0x54, 0xdd, 0xb3, 0x13, 0x05, 0x27, 0xe8, 0xdb, 0xbb, 0x38,
	0x91, 0xf7, 0xeb, 0xb9, 0xb3, 0xe0, 0x4b, 0x37, 0xa6, 0xfc, 0x7d, 0x2c, 0xd2, 0x85, 0x1b, 0xa5,
	0x89, 0x1b, 0x73, 0x16, 0xad, 0x62, 0xb7, 0x7a, 0x43, 0x3f, 0x6a, 0xb5, 0xe9, 0xa4, 0x37, 0xaf,
	0xe7, 0xf8, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x62, 0x5a, 0x70, 0xbe, 0x05, 0x00,
	0x00,
}
