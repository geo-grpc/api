// Code generated by protoc-gen-go. DO NOT EDIT.
// source: epl/protobuf/v1/geometry.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// the state of a geometry topological correctness
type SimpleState int32

const (
	// on creation, after projection and after generalization a geometry has state simple unknown (not know if simple or not)
	SimpleState_SIMPLE_UNKNOWN SimpleState = 0
	// weak simple (no self intersections, ring orientation is correct, but ring order is not)
	SimpleState_WEAK_SIMPLE SimpleState = 1
	// same as weak simple + OGC ring order.
	SimpleState_STRONG_SIMPLE SimpleState = 2
	// is_simple method has been run on the geometry and it is known to be non-simple, but the reason is unknown
	SimpleState_NON_SIMPLE SimpleState = 3
	// non-simple, because the structure is bad (0 size path, for example).
	SimpleState_STRUCTURE_FLAW SimpleState = 4
	// Non-simple, because there are degenerate segments.
	SimpleState_DEGENERATE_SEGMENTS SimpleState = 5
	// Non-simple, because not clustered properly, that is there are non-coincident vertices closer than tolerance.
	SimpleState_CLUSTERING SimpleState = 6
	// Non-simple, because not cracked properly (intersecting segments, overlaping segments)
	SimpleState_CRACKING SimpleState = 7
	// Non-simple, because there are crossovers (self intersections that are not cracking case).
	SimpleState_CROSS_OVER SimpleState = 8
	// Non-simple, because holes or exteriors have wrong orientation.
	SimpleState_RING_ORIENTATION SimpleState = 9
)

var SimpleState_name = map[int32]string{
	0: "SIMPLE_UNKNOWN",
	1: "WEAK_SIMPLE",
	2: "STRONG_SIMPLE",
	3: "NON_SIMPLE",
	4: "STRUCTURE_FLAW",
	5: "DEGENERATE_SEGMENTS",
	6: "CLUSTERING",
	7: "CRACKING",
	8: "CROSS_OVER",
	9: "RING_ORIENTATION",
}

var SimpleState_value = map[string]int32{
	"SIMPLE_UNKNOWN":      0,
	"WEAK_SIMPLE":         1,
	"STRONG_SIMPLE":       2,
	"NON_SIMPLE":          3,
	"STRUCTURE_FLAW":      4,
	"DEGENERATE_SEGMENTS": 5,
	"CLUSTERING":          6,
	"CRACKING":            7,
	"CROSS_OVER":          8,
	"RING_ORIENTATION":    9,
}

func (x SimpleState) String() string {
	return proto.EnumName(SimpleState_name, int32(x))
}

func (SimpleState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{0}
}

//
//type of geometry encodings
type Encoding int32

const (
	Encoding_UNKNOWN_ENCODING Encoding = 0
	Encoding_WKB              Encoding = 1
	Encoding_WKT              Encoding = 2
	Encoding_GEOJSON          Encoding = 3
	Encoding_ESRI_SHAPE       Encoding = 4
	Encoding_EWKB             Encoding = 5
)

var Encoding_name = map[int32]string{
	0: "UNKNOWN_ENCODING",
	1: "WKB",
	2: "WKT",
	3: "GEOJSON",
	4: "ESRI_SHAPE",
	5: "EWKB",
}

var Encoding_value = map[string]int32{
	"UNKNOWN_ENCODING": 0,
	"WKB":              1,
	"WKT":              2,
	"GEOJSON":          3,
	"ESRI_SHAPE":       4,
	"EWKB":             5,
}

func (x Encoding) String() string {
	return proto.EnumName(Encoding_name, int32(x))
}

func (Encoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{1}
}

//
//type of geometry operators
type OperatorType int32

const (
	OperatorType_UNKNOWN_OPERATOR           OperatorType = 0
	OperatorType_PROJECT                    OperatorType = 1
	OperatorType_EXPORT_TO_JSON             OperatorType = 2
	OperatorType_IMPORT_FROM_JSON           OperatorType = 3
	OperatorType_EXPORT_TO_ESRI_SHAPE       OperatorType = 4
	OperatorType_IMPORT_FROM_ESRI_SHAPE     OperatorType = 5
	OperatorType_UNION                      OperatorType = 6
	OperatorType_DIFFERENCE                 OperatorType = 7
	OperatorType_PROXIMITY_2D               OperatorType = 8
	OperatorType_RELATE                     OperatorType = 9
	OperatorType_EQUALS                     OperatorType = 10
	OperatorType_DISJOINT                   OperatorType = 11
	OperatorType_INTERSECTS                 OperatorType = 12
	OperatorType_WITHIN                     OperatorType = 13
	OperatorType_CONTAINS                   OperatorType = 14
	OperatorType_CROSSES                    OperatorType = 15
	OperatorType_TOUCHES                    OperatorType = 16
	OperatorType_OVERLAPS                   OperatorType = 17
	OperatorType_BUFFER                     OperatorType = 18
	OperatorType_DISTANCE                   OperatorType = 19
	OperatorType_INTERSECTION               OperatorType = 20
	OperatorType_CLIP                       OperatorType = 21
	OperatorType_CUT                        OperatorType = 22
	OperatorType_DENSIFY_BY_LENGTH          OperatorType = 23
	OperatorType_GEODESIC_BUFFER            OperatorType = 26
	OperatorType_GEODETIC_DENSIFY_BY_LENGTH OperatorType = 27
	OperatorType_GEODETIC_AREA              OperatorType = 30
	OperatorType_SIMPLIFY                   OperatorType = 31
	OperatorType_SIMPLIFY_OGC               OperatorType = 32
	OperatorType_OFFSET                     OperatorType = 33
	OperatorType_GENERALIZE                 OperatorType = 34
	OperatorType_GENERALIZE_BY_AREA         OperatorType = 35
	OperatorType_EXPORT_TO_WKB              OperatorType = 36
	OperatorType_IMPORT_FROM_WKB            OperatorType = 37
	OperatorType_EXPORT_TO_WKT              OperatorType = 38
	OperatorType_IMPORT_FROM_WKT            OperatorType = 39
	OperatorType_IMPORT_FROM_GEOJSON        OperatorType = 40
	OperatorType_EXPORT_TO_GEOJSON          OperatorType = 41
	OperatorType_SYMMETRIC_DIFFERENCE       OperatorType = 42
	OperatorType_CONVEX_HULL                OperatorType = 43
	OperatorType_BOUNDARY                   OperatorType = 44
	OperatorType_RANDOM_POINTS              OperatorType = 45
	OperatorType_ENCLOSING_CIRCLE           OperatorType = 46
	OperatorType_AFFINE_TRANSFORM           OperatorType = 47
	OperatorType_GEODETIC_LENGTH            OperatorType = 48
	OperatorType_GEODETIC_INVERSE           OperatorType = 49
	OperatorType_EXPORT_TO_EWKB             OperatorType = 50
	OperatorType_IMPORT_FROM_EWKB           OperatorType = 51
)

var OperatorType_name = map[int32]string{
	0:  "UNKNOWN_OPERATOR",
	1:  "PROJECT",
	2:  "EXPORT_TO_JSON",
	3:  "IMPORT_FROM_JSON",
	4:  "EXPORT_TO_ESRI_SHAPE",
	5:  "IMPORT_FROM_ESRI_SHAPE",
	6:  "UNION",
	7:  "DIFFERENCE",
	8:  "PROXIMITY_2D",
	9:  "RELATE",
	10: "EQUALS",
	11: "DISJOINT",
	12: "INTERSECTS",
	13: "WITHIN",
	14: "CONTAINS",
	15: "CROSSES",
	16: "TOUCHES",
	17: "OVERLAPS",
	18: "BUFFER",
	19: "DISTANCE",
	20: "INTERSECTION",
	21: "CLIP",
	22: "CUT",
	23: "DENSIFY_BY_LENGTH",
	26: "GEODESIC_BUFFER",
	27: "GEODETIC_DENSIFY_BY_LENGTH",
	30: "GEODETIC_AREA",
	31: "SIMPLIFY",
	32: "SIMPLIFY_OGC",
	33: "OFFSET",
	34: "GENERALIZE",
	35: "GENERALIZE_BY_AREA",
	36: "EXPORT_TO_WKB",
	37: "IMPORT_FROM_WKB",
	38: "EXPORT_TO_WKT",
	39: "IMPORT_FROM_WKT",
	40: "IMPORT_FROM_GEOJSON",
	41: "EXPORT_TO_GEOJSON",
	42: "SYMMETRIC_DIFFERENCE",
	43: "CONVEX_HULL",
	44: "BOUNDARY",
	45: "RANDOM_POINTS",
	46: "ENCLOSING_CIRCLE",
	47: "AFFINE_TRANSFORM",
	48: "GEODETIC_LENGTH",
	49: "GEODETIC_INVERSE",
	50: "EXPORT_TO_EWKB",
	51: "IMPORT_FROM_EWKB",
}

var OperatorType_value = map[string]int32{
	"UNKNOWN_OPERATOR":           0,
	"PROJECT":                    1,
	"EXPORT_TO_JSON":             2,
	"IMPORT_FROM_JSON":           3,
	"EXPORT_TO_ESRI_SHAPE":       4,
	"IMPORT_FROM_ESRI_SHAPE":     5,
	"UNION":                      6,
	"DIFFERENCE":                 7,
	"PROXIMITY_2D":               8,
	"RELATE":                     9,
	"EQUALS":                     10,
	"DISJOINT":                   11,
	"INTERSECTS":                 12,
	"WITHIN":                     13,
	"CONTAINS":                   14,
	"CROSSES":                    15,
	"TOUCHES":                    16,
	"OVERLAPS":                   17,
	"BUFFER":                     18,
	"DISTANCE":                   19,
	"INTERSECTION":               20,
	"CLIP":                       21,
	"CUT":                        22,
	"DENSIFY_BY_LENGTH":          23,
	"GEODESIC_BUFFER":            26,
	"GEODETIC_DENSIFY_BY_LENGTH": 27,
	"GEODETIC_AREA":              30,
	"SIMPLIFY":                   31,
	"SIMPLIFY_OGC":               32,
	"OFFSET":                     33,
	"GENERALIZE":                 34,
	"GENERALIZE_BY_AREA":         35,
	"EXPORT_TO_WKB":              36,
	"IMPORT_FROM_WKB":            37,
	"EXPORT_TO_WKT":              38,
	"IMPORT_FROM_WKT":            39,
	"IMPORT_FROM_GEOJSON":        40,
	"EXPORT_TO_GEOJSON":          41,
	"SYMMETRIC_DIFFERENCE":       42,
	"CONVEX_HULL":                43,
	"BOUNDARY":                   44,
	"RANDOM_POINTS":              45,
	"ENCLOSING_CIRCLE":           46,
	"AFFINE_TRANSFORM":           47,
	"GEODETIC_LENGTH":            48,
	"GEODETIC_INVERSE":           49,
	"EXPORT_TO_EWKB":             50,
	"IMPORT_FROM_EWKB":           51,
}

func (x OperatorType) String() string {
	return proto.EnumName(OperatorType_name, int32(x))
}

func (OperatorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{2}
}

// Projection names
type ProjectionData_CSType int32

const (
	// default is Lambert Azimuthal Equal Area Projection, with x origin x_0=4321000 and y origin y_0=3210000
	ProjectionData_LAMBERT_AZI ProjectionData_CSType = 0
)

var ProjectionData_CSType_name = map[int32]string{
	0: "LAMBERT_AZI",
}

var ProjectionData_CSType_value = map[string]int32{
	"LAMBERT_AZI": 0,
}

func (x ProjectionData_CSType) String() string {
	return proto.EnumName(ProjectionData_CSType_name, int32(x))
}

func (ProjectionData_CSType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{1, 0}
}

type FileRequestChunk_FileType int32

const (
	FileRequestChunk_SHAPEFILE FileRequestChunk_FileType = 0
)

var FileRequestChunk_FileType_name = map[int32]string{
	0: "SHAPEFILE",
}

var FileRequestChunk_FileType_value = map[string]int32{
	"SHAPEFILE": 0,
}

func (x FileRequestChunk_FileType) String() string {
	return proto.EnumName(FileRequestChunk_FileType_name, int32(x))
}

func (FileRequestChunk_FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{6, 0}
}

type Params_Offset_OffsetJoinType int32

const (
	Params_Offset_ROUND  Params_Offset_OffsetJoinType = 0
	Params_Offset_BEVEL  Params_Offset_OffsetJoinType = 1
	Params_Offset_MITER  Params_Offset_OffsetJoinType = 2
	Params_Offset_SQUARE Params_Offset_OffsetJoinType = 3
)

var Params_Offset_OffsetJoinType_name = map[int32]string{
	0: "ROUND",
	1: "BEVEL",
	2: "MITER",
	3: "SQUARE",
}

var Params_Offset_OffsetJoinType_value = map[string]int32{
	"ROUND":  0,
	"BEVEL":  1,
	"MITER":  2,
	"SQUARE": 3,
}

func (x Params_Offset_OffsetJoinType) String() string {
	return proto.EnumName(Params_Offset_OffsetJoinType_name, int32(x))
}

func (Params_Offset_OffsetJoinType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 8, 0}
}

//*
// Container for Geometry data, has id, encoded geometry coordinates and shape, spatial reference and envelope
type GeometryData struct {
	// geometry id as an integer
	GeometryId uint64 `protobuf:"varint,1,opt,name=geometry_id,json=geometryId,proto3" json:"geometry_id,omitempty"`
	// feature id as a string (for guids and other ids that aren't numeric)
	FeatureId string `protobuf:"bytes,2,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*GeometryData_Wkt
	//	*GeometryData_Geojson
	//	*GeometryData_Wkb
	//	*GeometryData_EsriShape
	//	*GeometryData_Ewkb
	Data isGeometryData_Data `protobuf_oneof:"data"`
	// spatial reference of geometry
	Proj *ProjectionData `protobuf:"bytes,7,opt,name=proj,proto3" json:"proj,omitempty"`
	// envelope or bounding box of geometry
	Envelope *EnvelopeData `protobuf:"bytes,13,opt,name=envelope,proto3" json:"envelope,omitempty"`
	// state of the geometry topological correctness. at geometry creation, it is unknown if it is simple
	Simple               SimpleState `protobuf:"varint,14,opt,name=simple,proto3,enum=epl.protobuf.v1.SimpleState" json:"simple,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GeometryData) Reset()         { *m = GeometryData{} }
func (m *GeometryData) String() string { return proto.CompactTextString(m) }
func (*GeometryData) ProtoMessage()    {}
func (*GeometryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{0}
}

func (m *GeometryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryData.Unmarshal(m, b)
}
func (m *GeometryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryData.Marshal(b, m, deterministic)
}
func (m *GeometryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryData.Merge(m, src)
}
func (m *GeometryData) XXX_Size() int {
	return xxx_messageInfo_GeometryData.Size(m)
}
func (m *GeometryData) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryData.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryData proto.InternalMessageInfo

func (m *GeometryData) GetGeometryId() uint64 {
	if m != nil {
		return m.GeometryId
	}
	return 0
}

func (m *GeometryData) GetFeatureId() string {
	if m != nil {
		return m.FeatureId
	}
	return ""
}

type isGeometryData_Data interface {
	isGeometryData_Data()
}

type GeometryData_Wkt struct {
	Wkt string `protobuf:"bytes,3,opt,name=wkt,proto3,oneof"`
}

type GeometryData_Geojson struct {
	Geojson string `protobuf:"bytes,4,opt,name=geojson,proto3,oneof"`
}

type GeometryData_Wkb struct {
	Wkb []byte `protobuf:"bytes,5,opt,name=wkb,proto3,oneof"`
}

type GeometryData_EsriShape struct {
	EsriShape []byte `protobuf:"bytes,6,opt,name=esri_shape,json=esriShape,proto3,oneof"`
}

type GeometryData_Ewkb struct {
	Ewkb []byte `protobuf:"bytes,15,opt,name=ewkb,proto3,oneof"`
}

func (*GeometryData_Wkt) isGeometryData_Data() {}

func (*GeometryData_Geojson) isGeometryData_Data() {}

func (*GeometryData_Wkb) isGeometryData_Data() {}

func (*GeometryData_EsriShape) isGeometryData_Data() {}

func (*GeometryData_Ewkb) isGeometryData_Data() {}

func (m *GeometryData) GetData() isGeometryData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GeometryData) GetWkt() string {
	if x, ok := m.GetData().(*GeometryData_Wkt); ok {
		return x.Wkt
	}
	return ""
}

func (m *GeometryData) GetGeojson() string {
	if x, ok := m.GetData().(*GeometryData_Geojson); ok {
		return x.Geojson
	}
	return ""
}

func (m *GeometryData) GetWkb() []byte {
	if x, ok := m.GetData().(*GeometryData_Wkb); ok {
		return x.Wkb
	}
	return nil
}

func (m *GeometryData) GetEsriShape() []byte {
	if x, ok := m.GetData().(*GeometryData_EsriShape); ok {
		return x.EsriShape
	}
	return nil
}

func (m *GeometryData) GetEwkb() []byte {
	if x, ok := m.GetData().(*GeometryData_Ewkb); ok {
		return x.Ewkb
	}
	return nil
}

func (m *GeometryData) GetProj() *ProjectionData {
	if m != nil {
		return m.Proj
	}
	return nil
}

func (m *GeometryData) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

func (m *GeometryData) GetSimple() SimpleState {
	if m != nil {
		return m.Simple
	}
	return SimpleState_SIMPLE_UNKNOWN
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GeometryData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GeometryData_Wkt)(nil),
		(*GeometryData_Geojson)(nil),
		(*GeometryData_Wkb)(nil),
		(*GeometryData_EsriShape)(nil),
		(*GeometryData_Ewkb)(nil),
	}
}

//*
// Spatial Reference system. Used with a geometry to define the reference system of the geometry's coordinates
type ProjectionData struct {
	// Types that are valid to be assigned to Definition:
	//	*ProjectionData_Epsg
	//	*ProjectionData_Proj4
	//	*ProjectionData_Custom_
	//	*ProjectionData_Wkt
	Definition           isProjectionData_Definition `protobuf_oneof:"definition"`
	Geometry             *GeometryData               `protobuf:"bytes,10,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Bbox                 *EnvelopeData               `protobuf:"bytes,11,opt,name=bbox,proto3" json:"bbox,omitempty"`
	Centroid             *GeometryData               `protobuf:"bytes,12,opt,name=centroid,proto3" json:"centroid,omitempty"`
	Shape                []uint32                    `protobuf:"varint,8,rep,packed,name=shape,proto3" json:"shape,omitempty"`
	Transform            []float64                   `protobuf:"fixed64,9,rep,packed,name=transform,proto3" json:"transform,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProjectionData) Reset()         { *m = ProjectionData{} }
func (m *ProjectionData) String() string { return proto.CompactTextString(m) }
func (*ProjectionData) ProtoMessage()    {}
func (*ProjectionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{1}
}

func (m *ProjectionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectionData.Unmarshal(m, b)
}
func (m *ProjectionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectionData.Marshal(b, m, deterministic)
}
func (m *ProjectionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectionData.Merge(m, src)
}
func (m *ProjectionData) XXX_Size() int {
	return xxx_messageInfo_ProjectionData.Size(m)
}
func (m *ProjectionData) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectionData.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectionData proto.InternalMessageInfo

type isProjectionData_Definition interface {
	isProjectionData_Definition()
}

type ProjectionData_Epsg struct {
	Epsg int32 `protobuf:"varint,1,opt,name=epsg,proto3,oneof"`
}

type ProjectionData_Proj4 struct {
	Proj4 string `protobuf:"bytes,2,opt,name=proj4,proto3,oneof"`
}

type ProjectionData_Custom_ struct {
	Custom *ProjectionData_Custom `protobuf:"bytes,3,opt,name=custom,proto3,oneof"`
}

type ProjectionData_Wkt struct {
	Wkt string `protobuf:"bytes,4,opt,name=wkt,proto3,oneof"`
}

func (*ProjectionData_Epsg) isProjectionData_Definition() {}

func (*ProjectionData_Proj4) isProjectionData_Definition() {}

func (*ProjectionData_Custom_) isProjectionData_Definition() {}

func (*ProjectionData_Wkt) isProjectionData_Definition() {}

func (m *ProjectionData) GetDefinition() isProjectionData_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *ProjectionData) GetEpsg() int32 {
	if x, ok := m.GetDefinition().(*ProjectionData_Epsg); ok {
		return x.Epsg
	}
	return 0
}

func (m *ProjectionData) GetProj4() string {
	if x, ok := m.GetDefinition().(*ProjectionData_Proj4); ok {
		return x.Proj4
	}
	return ""
}

func (m *ProjectionData) GetCustom() *ProjectionData_Custom {
	if x, ok := m.GetDefinition().(*ProjectionData_Custom_); ok {
		return x.Custom
	}
	return nil
}

func (m *ProjectionData) GetWkt() string {
	if x, ok := m.GetDefinition().(*ProjectionData_Wkt); ok {
		return x.Wkt
	}
	return ""
}

func (m *ProjectionData) GetGeometry() *GeometryData {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *ProjectionData) GetBbox() *EnvelopeData {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *ProjectionData) GetCentroid() *GeometryData {
	if m != nil {
		return m.Centroid
	}
	return nil
}

func (m *ProjectionData) GetShape() []uint32 {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *ProjectionData) GetTransform() []float64 {
	if m != nil {
		return m.Transform
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ProjectionData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ProjectionData_Epsg)(nil),
		(*ProjectionData_Proj4)(nil),
		(*ProjectionData_Custom_)(nil),
		(*ProjectionData_Wkt)(nil),
	}
}

// Projected coordinate system that doesn't have a wkid / srid
type ProjectionData_Custom struct {
	// longitude of center of projection (central meridian)
	Lon_0 float64 `protobuf:"fixed64,1,opt,name=lon_0,json=lon0,proto3" json:"lon_0,omitempty"`
	// latitude of center of projection (latitude of origin)
	Lat_0 float64 `protobuf:"fixed64,2,opt,name=lat_0,json=lat0,proto3" json:"lat_0,omitempty"`
	// enum defining the type of projection
	CsType               ProjectionData_CSType `protobuf:"varint,3,opt,name=cs_type,json=csType,proto3,enum=epl.protobuf.v1.ProjectionData_CSType" json:"cs_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ProjectionData_Custom) Reset()         { *m = ProjectionData_Custom{} }
func (m *ProjectionData_Custom) String() string { return proto.CompactTextString(m) }
func (*ProjectionData_Custom) ProtoMessage()    {}
func (*ProjectionData_Custom) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{1, 0}
}

func (m *ProjectionData_Custom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectionData_Custom.Unmarshal(m, b)
}
func (m *ProjectionData_Custom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectionData_Custom.Marshal(b, m, deterministic)
}
func (m *ProjectionData_Custom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectionData_Custom.Merge(m, src)
}
func (m *ProjectionData_Custom) XXX_Size() int {
	return xxx_messageInfo_ProjectionData_Custom.Size(m)
}
func (m *ProjectionData_Custom) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectionData_Custom.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectionData_Custom proto.InternalMessageInfo

func (m *ProjectionData_Custom) GetLon_0() float64 {
	if m != nil {
		return m.Lon_0
	}
	return 0
}

func (m *ProjectionData_Custom) GetLat_0() float64 {
	if m != nil {
		return m.Lat_0
	}
	return 0
}

func (m *ProjectionData_Custom) GetCsType() ProjectionData_CSType {
	if m != nil {
		return m.CsType
	}
	return ProjectionData_LAMBERT_AZI
}

//*
// Container for Envelope data (bounding box), x and y min and max and an optional spatial reference
type EnvelopeData struct {
	// min x value
	Xmin float64 `protobuf:"fixed64,1,opt,name=xmin,proto3" json:"xmin,omitempty"`
	// min y value
	Ymin float64 `protobuf:"fixed64,2,opt,name=ymin,proto3" json:"ymin,omitempty"`
	// max x value
	Xmax float64 `protobuf:"fixed64,3,opt,name=xmax,proto3" json:"xmax,omitempty"`
	// max y value
	Ymax float64 `protobuf:"fixed64,4,opt,name=ymax,proto3" json:"ymax,omitempty"`
	// spatial reference of envelope
	Proj                 *ProjectionData `protobuf:"bytes,5,opt,name=proj,proto3" json:"proj,omitempty"`
	Zmin                 float64         `protobuf:"fixed64,6,opt,name=zmin,proto3" json:"zmin,omitempty"`
	Zmax                 float64         `protobuf:"fixed64,7,opt,name=zmax,proto3" json:"zmax,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EnvelopeData) Reset()         { *m = EnvelopeData{} }
func (m *EnvelopeData) String() string { return proto.CompactTextString(m) }
func (*EnvelopeData) ProtoMessage()    {}
func (*EnvelopeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{2}
}

func (m *EnvelopeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvelopeData.Unmarshal(m, b)
}
func (m *EnvelopeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvelopeData.Marshal(b, m, deterministic)
}
func (m *EnvelopeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvelopeData.Merge(m, src)
}
func (m *EnvelopeData) XXX_Size() int {
	return xxx_messageInfo_EnvelopeData.Size(m)
}
func (m *EnvelopeData) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvelopeData.DiscardUnknown(m)
}

var xxx_messageInfo_EnvelopeData proto.InternalMessageInfo

func (m *EnvelopeData) GetXmin() float64 {
	if m != nil {
		return m.Xmin
	}
	return 0
}

func (m *EnvelopeData) GetYmin() float64 {
	if m != nil {
		return m.Ymin
	}
	return 0
}

func (m *EnvelopeData) GetXmax() float64 {
	if m != nil {
		return m.Xmax
	}
	return 0
}

func (m *EnvelopeData) GetYmax() float64 {
	if m != nil {
		return m.Ymax
	}
	return 0
}

func (m *EnvelopeData) GetProj() *ProjectionData {
	if m != nil {
		return m.Proj
	}
	return nil
}

func (m *EnvelopeData) GetZmin() float64 {
	if m != nil {
		return m.Zmin
	}
	return 0
}

func (m *EnvelopeData) GetZmax() float64 {
	if m != nil {
		return m.Zmax
	}
	return 0
}

//*
// response message for insertion and updates to stac db
type GeometryRequest struct {
	// Types that are valid to be assigned to Left:
	//	*GeometryRequest_Geometry
	//	*GeometryRequest_LeftGeometry
	//	*GeometryRequest_GeometryRequest
	//	*GeometryRequest_LeftGeometryRequest
	Left isGeometryRequest_Left `protobuf_oneof:"left"`
	// Types that are valid to be assigned to Right:
	//	*GeometryRequest_RightGeometry
	//	*GeometryRequest_RightGeometryRequest
	Right isGeometryRequest_Right `protobuf_oneof:"right"`
	// (default is PROJECT) geometry operation to perform on input geometries
	Operator OperatorType `protobuf:"varint,7,opt,name=operator,proto3,enum=epl.protobuf.v1.OperatorType" json:"operator,omitempty"`
	// (default is wkb) encoding, wkt, wkb, esri_shape, etc
	ResultEncoding Encoding `protobuf:"varint,8,opt,name=result_encoding,json=resultEncoding,proto3,enum=epl.protobuf.v1.Encoding" json:"result_encoding,omitempty"`
	// (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
	OperationProj *ProjectionData `protobuf:"bytes,9,opt,name=operation_proj,json=operationProj,proto3" json:"operation_proj,omitempty"`
	// (optional) after the operation has been completed, project the results to a new spatial reference.
	ResultProj *ProjectionData `protobuf:"bytes,10,opt,name=result_proj,json=resultProj,proto3" json:"result_proj,omitempty"`
	// Types that are valid to be assigned to Params:
	//	*GeometryRequest_BufferParams
	//	*GeometryRequest_ConvexParams
	//	*GeometryRequest_RelateParams
	//	*GeometryRequest_RandomPointsParams
	//	*GeometryRequest_GeneralizeParams
	//	*GeometryRequest_IntersectionParams
	//	*GeometryRequest_OffsetParams
	//	*GeometryRequest_CutParams
	//	*GeometryRequest_ClipParams
	//	*GeometryRequest_DensifyParams
	//	*GeometryRequest_SimplifyParams
	//	*GeometryRequest_GeneralizeByAreaParams
	//	*GeometryRequest_AffineTransformParams
	//	*GeometryRequest_GeodeticBufferParams
	Params               isGeometryRequest_Params `protobuf_oneof:"params"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GeometryRequest) Reset()         { *m = GeometryRequest{} }
func (m *GeometryRequest) String() string { return proto.CompactTextString(m) }
func (*GeometryRequest) ProtoMessage()    {}
func (*GeometryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{3}
}

func (m *GeometryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryRequest.Unmarshal(m, b)
}
func (m *GeometryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryRequest.Marshal(b, m, deterministic)
}
func (m *GeometryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryRequest.Merge(m, src)
}
func (m *GeometryRequest) XXX_Size() int {
	return xxx_messageInfo_GeometryRequest.Size(m)
}
func (m *GeometryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryRequest proto.InternalMessageInfo

type isGeometryRequest_Left interface {
	isGeometryRequest_Left()
}

type GeometryRequest_Geometry struct {
	Geometry *GeometryData `protobuf:"bytes,1,opt,name=geometry,proto3,oneof"`
}

type GeometryRequest_LeftGeometry struct {
	LeftGeometry *GeometryData `protobuf:"bytes,2,opt,name=left_geometry,json=leftGeometry,proto3,oneof"`
}

type GeometryRequest_GeometryRequest struct {
	GeometryRequest *GeometryRequest `protobuf:"bytes,3,opt,name=geometry_request,json=geometryRequest,proto3,oneof"`
}

type GeometryRequest_LeftGeometryRequest struct {
	LeftGeometryRequest *GeometryRequest `protobuf:"bytes,4,opt,name=left_geometry_request,json=leftGeometryRequest,proto3,oneof"`
}

func (*GeometryRequest_Geometry) isGeometryRequest_Left() {}

func (*GeometryRequest_LeftGeometry) isGeometryRequest_Left() {}

func (*GeometryRequest_GeometryRequest) isGeometryRequest_Left() {}

func (*GeometryRequest_LeftGeometryRequest) isGeometryRequest_Left() {}

func (m *GeometryRequest) GetLeft() isGeometryRequest_Left {
	if m != nil {
		return m.Left
	}
	return nil
}

func (m *GeometryRequest) GetGeometry() *GeometryData {
	if x, ok := m.GetLeft().(*GeometryRequest_Geometry); ok {
		return x.Geometry
	}
	return nil
}

func (m *GeometryRequest) GetLeftGeometry() *GeometryData {
	if x, ok := m.GetLeft().(*GeometryRequest_LeftGeometry); ok {
		return x.LeftGeometry
	}
	return nil
}

func (m *GeometryRequest) GetGeometryRequest() *GeometryRequest {
	if x, ok := m.GetLeft().(*GeometryRequest_GeometryRequest); ok {
		return x.GeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetLeftGeometryRequest() *GeometryRequest {
	if x, ok := m.GetLeft().(*GeometryRequest_LeftGeometryRequest); ok {
		return x.LeftGeometryRequest
	}
	return nil
}

type isGeometryRequest_Right interface {
	isGeometryRequest_Right()
}

type GeometryRequest_RightGeometry struct {
	RightGeometry *GeometryData `protobuf:"bytes,5,opt,name=right_geometry,json=rightGeometry,proto3,oneof"`
}

type GeometryRequest_RightGeometryRequest struct {
	RightGeometryRequest *GeometryRequest `protobuf:"bytes,6,opt,name=right_geometry_request,json=rightGeometryRequest,proto3,oneof"`
}

func (*GeometryRequest_RightGeometry) isGeometryRequest_Right() {}

func (*GeometryRequest_RightGeometryRequest) isGeometryRequest_Right() {}

func (m *GeometryRequest) GetRight() isGeometryRequest_Right {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *GeometryRequest) GetRightGeometry() *GeometryData {
	if x, ok := m.GetRight().(*GeometryRequest_RightGeometry); ok {
		return x.RightGeometry
	}
	return nil
}

func (m *GeometryRequest) GetRightGeometryRequest() *GeometryRequest {
	if x, ok := m.GetRight().(*GeometryRequest_RightGeometryRequest); ok {
		return x.RightGeometryRequest
	}
	return nil
}

func (m *GeometryRequest) GetOperator() OperatorType {
	if m != nil {
		return m.Operator
	}
	return OperatorType_UNKNOWN_OPERATOR
}

func (m *GeometryRequest) GetResultEncoding() Encoding {
	if m != nil {
		return m.ResultEncoding
	}
	return Encoding_UNKNOWN_ENCODING
}

func (m *GeometryRequest) GetOperationProj() *ProjectionData {
	if m != nil {
		return m.OperationProj
	}
	return nil
}

func (m *GeometryRequest) GetResultProj() *ProjectionData {
	if m != nil {
		return m.ResultProj
	}
	return nil
}

type isGeometryRequest_Params interface {
	isGeometryRequest_Params()
}

type GeometryRequest_BufferParams struct {
	BufferParams *Params_Buffer `protobuf:"bytes,11,opt,name=buffer_params,json=bufferParams,proto3,oneof"`
}

type GeometryRequest_ConvexParams struct {
	ConvexParams *Params_Convex `protobuf:"bytes,12,opt,name=convex_params,json=convexParams,proto3,oneof"`
}

type GeometryRequest_RelateParams struct {
	RelateParams *Params_Relate `protobuf:"bytes,13,opt,name=relate_params,json=relateParams,proto3,oneof"`
}

type GeometryRequest_RandomPointsParams struct {
	RandomPointsParams *Params_RandomPoints `protobuf:"bytes,14,opt,name=random_points_params,json=randomPointsParams,proto3,oneof"`
}

type GeometryRequest_GeneralizeParams struct {
	GeneralizeParams *Params_Generalize `protobuf:"bytes,15,opt,name=generalize_params,json=generalizeParams,proto3,oneof"`
}

type GeometryRequest_IntersectionParams struct {
	IntersectionParams *Params_Intersection `protobuf:"bytes,16,opt,name=intersection_params,json=intersectionParams,proto3,oneof"`
}

type GeometryRequest_OffsetParams struct {
	OffsetParams *Params_Offset `protobuf:"bytes,17,opt,name=offset_params,json=offsetParams,proto3,oneof"`
}

type GeometryRequest_CutParams struct {
	CutParams *Params_Cut `protobuf:"bytes,18,opt,name=cut_params,json=cutParams,proto3,oneof"`
}

type GeometryRequest_ClipParams struct {
	ClipParams *Params_Clip `protobuf:"bytes,19,opt,name=clip_params,json=clipParams,proto3,oneof"`
}

type GeometryRequest_DensifyParams struct {
	DensifyParams *Params_Densify `protobuf:"bytes,20,opt,name=densify_params,json=densifyParams,proto3,oneof"`
}

type GeometryRequest_SimplifyParams struct {
	SimplifyParams *Params_Simplify `protobuf:"bytes,21,opt,name=simplify_params,json=simplifyParams,proto3,oneof"`
}

type GeometryRequest_GeneralizeByAreaParams struct {
	GeneralizeByAreaParams *Params_GeneralizeByArea `protobuf:"bytes,22,opt,name=generalize_by_area_params,json=generalizeByAreaParams,proto3,oneof"`
}

type GeometryRequest_AffineTransformParams struct {
	AffineTransformParams *Params_AffineTransform `protobuf:"bytes,23,opt,name=affine_transform_params,json=affineTransformParams,proto3,oneof"`
}

type GeometryRequest_GeodeticBufferParams struct {
	GeodeticBufferParams *Params_GeodeticBuffer `protobuf:"bytes,24,opt,name=geodetic_buffer_params,json=geodeticBufferParams,proto3,oneof"`
}

func (*GeometryRequest_BufferParams) isGeometryRequest_Params() {}

func (*GeometryRequest_ConvexParams) isGeometryRequest_Params() {}

func (*GeometryRequest_RelateParams) isGeometryRequest_Params() {}

func (*GeometryRequest_RandomPointsParams) isGeometryRequest_Params() {}

func (*GeometryRequest_GeneralizeParams) isGeometryRequest_Params() {}

func (*GeometryRequest_IntersectionParams) isGeometryRequest_Params() {}

func (*GeometryRequest_OffsetParams) isGeometryRequest_Params() {}

func (*GeometryRequest_CutParams) isGeometryRequest_Params() {}

func (*GeometryRequest_ClipParams) isGeometryRequest_Params() {}

func (*GeometryRequest_DensifyParams) isGeometryRequest_Params() {}

func (*GeometryRequest_SimplifyParams) isGeometryRequest_Params() {}

func (*GeometryRequest_GeneralizeByAreaParams) isGeometryRequest_Params() {}

func (*GeometryRequest_AffineTransformParams) isGeometryRequest_Params() {}

func (*GeometryRequest_GeodeticBufferParams) isGeometryRequest_Params() {}

func (m *GeometryRequest) GetParams() isGeometryRequest_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *GeometryRequest) GetBufferParams() *Params_Buffer {
	if x, ok := m.GetParams().(*GeometryRequest_BufferParams); ok {
		return x.BufferParams
	}
	return nil
}

func (m *GeometryRequest) GetConvexParams() *Params_Convex {
	if x, ok := m.GetParams().(*GeometryRequest_ConvexParams); ok {
		return x.ConvexParams
	}
	return nil
}

func (m *GeometryRequest) GetRelateParams() *Params_Relate {
	if x, ok := m.GetParams().(*GeometryRequest_RelateParams); ok {
		return x.RelateParams
	}
	return nil
}

func (m *GeometryRequest) GetRandomPointsParams() *Params_RandomPoints {
	if x, ok := m.GetParams().(*GeometryRequest_RandomPointsParams); ok {
		return x.RandomPointsParams
	}
	return nil
}

func (m *GeometryRequest) GetGeneralizeParams() *Params_Generalize {
	if x, ok := m.GetParams().(*GeometryRequest_GeneralizeParams); ok {
		return x.GeneralizeParams
	}
	return nil
}

func (m *GeometryRequest) GetIntersectionParams() *Params_Intersection {
	if x, ok := m.GetParams().(*GeometryRequest_IntersectionParams); ok {
		return x.IntersectionParams
	}
	return nil
}

func (m *GeometryRequest) GetOffsetParams() *Params_Offset {
	if x, ok := m.GetParams().(*GeometryRequest_OffsetParams); ok {
		return x.OffsetParams
	}
	return nil
}

func (m *GeometryRequest) GetCutParams() *Params_Cut {
	if x, ok := m.GetParams().(*GeometryRequest_CutParams); ok {
		return x.CutParams
	}
	return nil
}

func (m *GeometryRequest) GetClipParams() *Params_Clip {
	if x, ok := m.GetParams().(*GeometryRequest_ClipParams); ok {
		return x.ClipParams
	}
	return nil
}

func (m *GeometryRequest) GetDensifyParams() *Params_Densify {
	if x, ok := m.GetParams().(*GeometryRequest_DensifyParams); ok {
		return x.DensifyParams
	}
	return nil
}

func (m *GeometryRequest) GetSimplifyParams() *Params_Simplify {
	if x, ok := m.GetParams().(*GeometryRequest_SimplifyParams); ok {
		return x.SimplifyParams
	}
	return nil
}

func (m *GeometryRequest) GetGeneralizeByAreaParams() *Params_GeneralizeByArea {
	if x, ok := m.GetParams().(*GeometryRequest_GeneralizeByAreaParams); ok {
		return x.GeneralizeByAreaParams
	}
	return nil
}

func (m *GeometryRequest) GetAffineTransformParams() *Params_AffineTransform {
	if x, ok := m.GetParams().(*GeometryRequest_AffineTransformParams); ok {
		return x.AffineTransformParams
	}
	return nil
}

func (m *GeometryRequest) GetGeodeticBufferParams() *Params_GeodeticBuffer {
	if x, ok := m.GetParams().(*GeometryRequest_GeodeticBufferParams); ok {
		return x.GeodeticBufferParams
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GeometryRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GeometryRequest_Geometry)(nil),
		(*GeometryRequest_LeftGeometry)(nil),
		(*GeometryRequest_GeometryRequest)(nil),
		(*GeometryRequest_LeftGeometryRequest)(nil),
		(*GeometryRequest_RightGeometry)(nil),
		(*GeometryRequest_RightGeometryRequest)(nil),
		(*GeometryRequest_BufferParams)(nil),
		(*GeometryRequest_ConvexParams)(nil),
		(*GeometryRequest_RelateParams)(nil),
		(*GeometryRequest_RandomPointsParams)(nil),
		(*GeometryRequest_GeneralizeParams)(nil),
		(*GeometryRequest_IntersectionParams)(nil),
		(*GeometryRequest_OffsetParams)(nil),
		(*GeometryRequest_CutParams)(nil),
		(*GeometryRequest_ClipParams)(nil),
		(*GeometryRequest_DensifyParams)(nil),
		(*GeometryRequest_SimplifyParams)(nil),
		(*GeometryRequest_GeneralizeByAreaParams)(nil),
		(*GeometryRequest_AffineTransformParams)(nil),
		(*GeometryRequest_GeodeticBufferParams)(nil),
	}
}

type GeodeticInverse struct {
	// Azimuth from the first to the second point
	Az12 float64 `protobuf:"fixed64,1,opt,name=az12,proto3" json:"az12,omitempty"`
	// Azimuth from the second to the first point
	Az21 float64 `protobuf:"fixed64,2,opt,name=az21,proto3" json:"az21,omitempty"`
	// Geodesic distance
	Distance             float64  `protobuf:"fixed64,3,opt,name=distance,proto3" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeodeticInverse) Reset()         { *m = GeodeticInverse{} }
func (m *GeodeticInverse) String() string { return proto.CompactTextString(m) }
func (*GeodeticInverse) ProtoMessage()    {}
func (*GeodeticInverse) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{4}
}

func (m *GeodeticInverse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeodeticInverse.Unmarshal(m, b)
}
func (m *GeodeticInverse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeodeticInverse.Marshal(b, m, deterministic)
}
func (m *GeodeticInverse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeodeticInverse.Merge(m, src)
}
func (m *GeodeticInverse) XXX_Size() int {
	return xxx_messageInfo_GeodeticInverse.Size(m)
}
func (m *GeodeticInverse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeodeticInverse.DiscardUnknown(m)
}

var xxx_messageInfo_GeodeticInverse proto.InternalMessageInfo

func (m *GeodeticInverse) GetAz12() float64 {
	if m != nil {
		return m.Az12
	}
	return 0
}

func (m *GeodeticInverse) GetAz21() float64 {
	if m != nil {
		return m.Az21
	}
	return 0
}

func (m *GeodeticInverse) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

//*
// response message geometry request
type GeometryResponse struct {
	// Types that are valid to be assigned to Result:
	//	*GeometryResponse_Geometry
	//	*GeometryResponse_SpatialRelationship
	//	*GeometryResponse_Measure
	//	*GeometryResponse_GeodeticInverse
	Result               isGeometryResponse_Result `protobuf_oneof:"result"`
	RelateMap            map[int64]bool            `protobuf:"bytes,5,rep,name=relate_map,json=relateMap,proto3" json:"relate_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GeometryResponse) Reset()         { *m = GeometryResponse{} }
func (m *GeometryResponse) String() string { return proto.CompactTextString(m) }
func (*GeometryResponse) ProtoMessage()    {}
func (*GeometryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{5}
}

func (m *GeometryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeometryResponse.Unmarshal(m, b)
}
func (m *GeometryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeometryResponse.Marshal(b, m, deterministic)
}
func (m *GeometryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeometryResponse.Merge(m, src)
}
func (m *GeometryResponse) XXX_Size() int {
	return xxx_messageInfo_GeometryResponse.Size(m)
}
func (m *GeometryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeometryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeometryResponse proto.InternalMessageInfo

type isGeometryResponse_Result interface {
	isGeometryResponse_Result()
}

type GeometryResponse_Geometry struct {
	Geometry *GeometryData `protobuf:"bytes,1,opt,name=geometry,proto3,oneof"`
}

type GeometryResponse_SpatialRelationship struct {
	SpatialRelationship bool `protobuf:"varint,2,opt,name=spatial_relationship,json=spatialRelationship,proto3,oneof"`
}

type GeometryResponse_Measure struct {
	Measure float64 `protobuf:"fixed64,3,opt,name=measure,proto3,oneof"`
}

type GeometryResponse_GeodeticInverse struct {
	GeodeticInverse *GeodeticInverse `protobuf:"bytes,4,opt,name=geodetic_inverse,json=geodeticInverse,proto3,oneof"`
}

func (*GeometryResponse_Geometry) isGeometryResponse_Result() {}

func (*GeometryResponse_SpatialRelationship) isGeometryResponse_Result() {}

func (*GeometryResponse_Measure) isGeometryResponse_Result() {}

func (*GeometryResponse_GeodeticInverse) isGeometryResponse_Result() {}

func (m *GeometryResponse) GetResult() isGeometryResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GeometryResponse) GetGeometry() *GeometryData {
	if x, ok := m.GetResult().(*GeometryResponse_Geometry); ok {
		return x.Geometry
	}
	return nil
}

func (m *GeometryResponse) GetSpatialRelationship() bool {
	if x, ok := m.GetResult().(*GeometryResponse_SpatialRelationship); ok {
		return x.SpatialRelationship
	}
	return false
}

func (m *GeometryResponse) GetMeasure() float64 {
	if x, ok := m.GetResult().(*GeometryResponse_Measure); ok {
		return x.Measure
	}
	return 0
}

func (m *GeometryResponse) GetGeodeticInverse() *GeodeticInverse {
	if x, ok := m.GetResult().(*GeometryResponse_GeodeticInverse); ok {
		return x.GeodeticInverse
	}
	return nil
}

func (m *GeometryResponse) GetRelateMap() map[int64]bool {
	if m != nil {
		return m.RelateMap
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GeometryResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GeometryResponse_Geometry)(nil),
		(*GeometryResponse_SpatialRelationship)(nil),
		(*GeometryResponse_Measure)(nil),
		(*GeometryResponse_GeodeticInverse)(nil),
	}
}

type FileRequestChunk struct {
	NestedRequest        *GeometryRequest `protobuf:"bytes,1,opt,name=nested_request,json=nestedRequest,proto3" json:"nested_request,omitempty"`
	ResultEncodingType   Encoding         `protobuf:"varint,2,opt,name=result_encoding_type,json=resultEncodingType,proto3,enum=epl.protobuf.v1.Encoding" json:"result_encoding_type,omitempty"`
	InputProj            *ProjectionData  `protobuf:"bytes,3,opt,name=input_proj,json=inputProj,proto3" json:"input_proj,omitempty"`
	ResultProj           *ProjectionData  `protobuf:"bytes,5,opt,name=result_proj,json=resultProj,proto3" json:"result_proj,omitempty"`
	Data                 []byte           `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Size                 int64            `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Offset               int64            `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	FileName             string           `protobuf:"bytes,9,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	IsLastChunk          bool             `protobuf:"varint,10,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FileRequestChunk) Reset()         { *m = FileRequestChunk{} }
func (m *FileRequestChunk) String() string { return proto.CompactTextString(m) }
func (*FileRequestChunk) ProtoMessage()    {}
func (*FileRequestChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{6}
}

func (m *FileRequestChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRequestChunk.Unmarshal(m, b)
}
func (m *FileRequestChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRequestChunk.Marshal(b, m, deterministic)
}
func (m *FileRequestChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRequestChunk.Merge(m, src)
}
func (m *FileRequestChunk) XXX_Size() int {
	return xxx_messageInfo_FileRequestChunk.Size(m)
}
func (m *FileRequestChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRequestChunk.DiscardUnknown(m)
}

var xxx_messageInfo_FileRequestChunk proto.InternalMessageInfo

func (m *FileRequestChunk) GetNestedRequest() *GeometryRequest {
	if m != nil {
		return m.NestedRequest
	}
	return nil
}

func (m *FileRequestChunk) GetResultEncodingType() Encoding {
	if m != nil {
		return m.ResultEncodingType
	}
	return Encoding_UNKNOWN_ENCODING
}

func (m *FileRequestChunk) GetInputProj() *ProjectionData {
	if m != nil {
		return m.InputProj
	}
	return nil
}

func (m *FileRequestChunk) GetResultProj() *ProjectionData {
	if m != nil {
		return m.ResultProj
	}
	return nil
}

func (m *FileRequestChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileRequestChunk) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileRequestChunk) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FileRequestChunk) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileRequestChunk) GetIsLastChunk() bool {
	if m != nil {
		return m.IsLastChunk
	}
	return false
}

type Params struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7}
}

func (m *Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params.Unmarshal(m, b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params.Marshal(b, m, deterministic)
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return xxx_messageInfo_Params.Size(m)
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

type Params_Buffer struct {
	Distance     float64 `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	MaxDeviation float64 `protobuf:"fixed64,2,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	// oneof https://github.com/golang/protobuf/issues/283
	//        }
	UnionResult             bool     `protobuf:"varint,3,opt,name=union_result,json=unionResult,proto3" json:"union_result,omitempty"`
	MaxVerticesInFullCircle int32    `protobuf:"varint,4,opt,name=max_vertices_in_full_circle,json=maxVerticesInFullCircle,proto3" json:"max_vertices_in_full_circle,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Params_Buffer) Reset()         { *m = Params_Buffer{} }
func (m *Params_Buffer) String() string { return proto.CompactTextString(m) }
func (*Params_Buffer) ProtoMessage()    {}
func (*Params_Buffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 0}
}

func (m *Params_Buffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Buffer.Unmarshal(m, b)
}
func (m *Params_Buffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Buffer.Marshal(b, m, deterministic)
}
func (m *Params_Buffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Buffer.Merge(m, src)
}
func (m *Params_Buffer) XXX_Size() int {
	return xxx_messageInfo_Params_Buffer.Size(m)
}
func (m *Params_Buffer) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Buffer.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Buffer proto.InternalMessageInfo

func (m *Params_Buffer) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Params_Buffer) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *Params_Buffer) GetUnionResult() bool {
	if m != nil {
		return m.UnionResult
	}
	return false
}

func (m *Params_Buffer) GetMaxVerticesInFullCircle() int32 {
	if m != nil {
		return m.MaxVerticesInFullCircle
	}
	return 0
}

type Params_GeodeticBuffer struct {
	Distance     float64 `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	MaxDeviation float64 `protobuf:"fixed64,2,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	// oneof https://github.com/golang/protobuf/issues/283
	//        }
	UnionResult             bool     `protobuf:"varint,3,opt,name=union_result,json=unionResult,proto3" json:"union_result,omitempty"`
	MaxVerticesInFullCircle int32    `protobuf:"varint,4,opt,name=max_vertices_in_full_circle,json=maxVerticesInFullCircle,proto3" json:"max_vertices_in_full_circle,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Params_GeodeticBuffer) Reset()         { *m = Params_GeodeticBuffer{} }
func (m *Params_GeodeticBuffer) String() string { return proto.CompactTextString(m) }
func (*Params_GeodeticBuffer) ProtoMessage()    {}
func (*Params_GeodeticBuffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 1}
}

func (m *Params_GeodeticBuffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_GeodeticBuffer.Unmarshal(m, b)
}
func (m *Params_GeodeticBuffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_GeodeticBuffer.Marshal(b, m, deterministic)
}
func (m *Params_GeodeticBuffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_GeodeticBuffer.Merge(m, src)
}
func (m *Params_GeodeticBuffer) XXX_Size() int {
	return xxx_messageInfo_Params_GeodeticBuffer.Size(m)
}
func (m *Params_GeodeticBuffer) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_GeodeticBuffer.DiscardUnknown(m)
}

var xxx_messageInfo_Params_GeodeticBuffer proto.InternalMessageInfo

func (m *Params_GeodeticBuffer) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Params_GeodeticBuffer) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *Params_GeodeticBuffer) GetUnionResult() bool {
	if m != nil {
		return m.UnionResult
	}
	return false
}

func (m *Params_GeodeticBuffer) GetMaxVerticesInFullCircle() int32 {
	if m != nil {
		return m.MaxVerticesInFullCircle
	}
	return 0
}

type Params_Convex struct {
	Merge                bool     `protobuf:"varint,1,opt,name=merge,proto3" json:"merge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Convex) Reset()         { *m = Params_Convex{} }
func (m *Params_Convex) String() string { return proto.CompactTextString(m) }
func (*Params_Convex) ProtoMessage()    {}
func (*Params_Convex) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 2}
}

func (m *Params_Convex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Convex.Unmarshal(m, b)
}
func (m *Params_Convex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Convex.Marshal(b, m, deterministic)
}
func (m *Params_Convex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Convex.Merge(m, src)
}
func (m *Params_Convex) XXX_Size() int {
	return xxx_messageInfo_Params_Convex.Size(m)
}
func (m *Params_Convex) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Convex.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Convex proto.InternalMessageInfo

func (m *Params_Convex) GetMerge() bool {
	if m != nil {
		return m.Merge
	}
	return false
}

type Params_Relate struct {
	De_9Im               string   `protobuf:"bytes,1,opt,name=de_9im,json=de9im,proto3" json:"de_9im,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Relate) Reset()         { *m = Params_Relate{} }
func (m *Params_Relate) String() string { return proto.CompactTextString(m) }
func (*Params_Relate) ProtoMessage()    {}
func (*Params_Relate) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 3}
}

func (m *Params_Relate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Relate.Unmarshal(m, b)
}
func (m *Params_Relate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Relate.Marshal(b, m, deterministic)
}
func (m *Params_Relate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Relate.Merge(m, src)
}
func (m *Params_Relate) XXX_Size() int {
	return xxx_messageInfo_Params_Relate.Size(m)
}
func (m *Params_Relate) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Relate.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Relate proto.InternalMessageInfo

func (m *Params_Relate) GetDe_9Im() string {
	if m != nil {
		return m.De_9Im
	}
	return ""
}

type Params_RandomPoints struct {
	PointsPerSquareKm    float64  `protobuf:"fixed64,1,opt,name=points_per_square_km,json=pointsPerSquareKm,proto3" json:"points_per_square_km,omitempty"`
	Seed                 int64    `protobuf:"varint,2,opt,name=seed,proto3" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_RandomPoints) Reset()         { *m = Params_RandomPoints{} }
func (m *Params_RandomPoints) String() string { return proto.CompactTextString(m) }
func (*Params_RandomPoints) ProtoMessage()    {}
func (*Params_RandomPoints) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 4}
}

func (m *Params_RandomPoints) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_RandomPoints.Unmarshal(m, b)
}
func (m *Params_RandomPoints) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_RandomPoints.Marshal(b, m, deterministic)
}
func (m *Params_RandomPoints) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_RandomPoints.Merge(m, src)
}
func (m *Params_RandomPoints) XXX_Size() int {
	return xxx_messageInfo_Params_RandomPoints.Size(m)
}
func (m *Params_RandomPoints) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_RandomPoints.DiscardUnknown(m)
}

var xxx_messageInfo_Params_RandomPoints proto.InternalMessageInfo

func (m *Params_RandomPoints) GetPointsPerSquareKm() float64 {
	if m != nil {
		return m.PointsPerSquareKm
	}
	return 0
}

func (m *Params_RandomPoints) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

type Params_Generalize struct {
	MaxDeviation         float64  `protobuf:"fixed64,1,opt,name=max_deviation,json=maxDeviation,proto3" json:"max_deviation,omitempty"`
	RemoveDegenerates    bool     `protobuf:"varint,2,opt,name=remove_degenerates,json=removeDegenerates,proto3" json:"remove_degenerates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Generalize) Reset()         { *m = Params_Generalize{} }
func (m *Params_Generalize) String() string { return proto.CompactTextString(m) }
func (*Params_Generalize) ProtoMessage()    {}
func (*Params_Generalize) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 5}
}

func (m *Params_Generalize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Generalize.Unmarshal(m, b)
}
func (m *Params_Generalize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Generalize.Marshal(b, m, deterministic)
}
func (m *Params_Generalize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Generalize.Merge(m, src)
}
func (m *Params_Generalize) XXX_Size() int {
	return xxx_messageInfo_Params_Generalize.Size(m)
}
func (m *Params_Generalize) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Generalize.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Generalize proto.InternalMessageInfo

func (m *Params_Generalize) GetMaxDeviation() float64 {
	if m != nil {
		return m.MaxDeviation
	}
	return 0
}

func (m *Params_Generalize) GetRemoveDegenerates() bool {
	if m != nil {
		return m.RemoveDegenerates
	}
	return false
}

type Params_GeneralizeByArea struct {
	// oneof https://github.com/golang/protobuf/issues/283
	//        oneof method {
	PercentReduction     float64  `protobuf:"fixed64,1,opt,name=percent_reduction,json=percentReduction,proto3" json:"percent_reduction,omitempty"`
	MaxPointCount        int32    `protobuf:"varint,2,opt,name=max_point_count,json=maxPointCount,proto3" json:"max_point_count,omitempty"`
	RemoveDegenerates    bool     `protobuf:"varint,3,opt,name=remove_degenerates,json=removeDegenerates,proto3" json:"remove_degenerates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_GeneralizeByArea) Reset()         { *m = Params_GeneralizeByArea{} }
func (m *Params_GeneralizeByArea) String() string { return proto.CompactTextString(m) }
func (*Params_GeneralizeByArea) ProtoMessage()    {}
func (*Params_GeneralizeByArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 6}
}

func (m *Params_GeneralizeByArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_GeneralizeByArea.Unmarshal(m, b)
}
func (m *Params_GeneralizeByArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_GeneralizeByArea.Marshal(b, m, deterministic)
}
func (m *Params_GeneralizeByArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_GeneralizeByArea.Merge(m, src)
}
func (m *Params_GeneralizeByArea) XXX_Size() int {
	return xxx_messageInfo_Params_GeneralizeByArea.Size(m)
}
func (m *Params_GeneralizeByArea) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_GeneralizeByArea.DiscardUnknown(m)
}

var xxx_messageInfo_Params_GeneralizeByArea proto.InternalMessageInfo

func (m *Params_GeneralizeByArea) GetPercentReduction() float64 {
	if m != nil {
		return m.PercentReduction
	}
	return 0
}

func (m *Params_GeneralizeByArea) GetMaxPointCount() int32 {
	if m != nil {
		return m.MaxPointCount
	}
	return 0
}

func (m *Params_GeneralizeByArea) GetRemoveDegenerates() bool {
	if m != nil {
		return m.RemoveDegenerates
	}
	return false
}

type Params_Intersection struct {
	DimensionMask        int32    `protobuf:"varint,1,opt,name=dimension_mask,json=dimensionMask,proto3" json:"dimension_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Intersection) Reset()         { *m = Params_Intersection{} }
func (m *Params_Intersection) String() string { return proto.CompactTextString(m) }
func (*Params_Intersection) ProtoMessage()    {}
func (*Params_Intersection) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 7}
}

func (m *Params_Intersection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Intersection.Unmarshal(m, b)
}
func (m *Params_Intersection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Intersection.Marshal(b, m, deterministic)
}
func (m *Params_Intersection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Intersection.Merge(m, src)
}
func (m *Params_Intersection) XXX_Size() int {
	return xxx_messageInfo_Params_Intersection.Size(m)
}
func (m *Params_Intersection) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Intersection.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Intersection proto.InternalMessageInfo

func (m *Params_Intersection) GetDimensionMask() int32 {
	if m != nil {
		return m.DimensionMask
	}
	return 0
}

type Params_Offset struct {
	Distance             float64                      `protobuf:"fixed64,1,opt,name=distance,proto3" json:"distance,omitempty"`
	JoinType             Params_Offset_OffsetJoinType `protobuf:"varint,2,opt,name=join_type,json=joinType,proto3,enum=epl.protobuf.v1.Params_Offset_OffsetJoinType" json:"join_type,omitempty"`
	BevelRatio           float64                      `protobuf:"fixed64,3,opt,name=bevel_ratio,json=bevelRatio,proto3" json:"bevel_ratio,omitempty"`
	FlattenError         float64                      `protobuf:"fixed64,4,opt,name=flatten_error,json=flattenError,proto3" json:"flatten_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Params_Offset) Reset()         { *m = Params_Offset{} }
func (m *Params_Offset) String() string { return proto.CompactTextString(m) }
func (*Params_Offset) ProtoMessage()    {}
func (*Params_Offset) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 8}
}

func (m *Params_Offset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Offset.Unmarshal(m, b)
}
func (m *Params_Offset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Offset.Marshal(b, m, deterministic)
}
func (m *Params_Offset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Offset.Merge(m, src)
}
func (m *Params_Offset) XXX_Size() int {
	return xxx_messageInfo_Params_Offset.Size(m)
}
func (m *Params_Offset) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Offset.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Offset proto.InternalMessageInfo

func (m *Params_Offset) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Params_Offset) GetJoinType() Params_Offset_OffsetJoinType {
	if m != nil {
		return m.JoinType
	}
	return Params_Offset_ROUND
}

func (m *Params_Offset) GetBevelRatio() float64 {
	if m != nil {
		return m.BevelRatio
	}
	return 0
}

func (m *Params_Offset) GetFlattenError() float64 {
	if m != nil {
		return m.FlattenError
	}
	return 0
}

type Params_Cut struct {
	ConsiderTouch        bool     `protobuf:"varint,1,opt,name=consider_touch,json=considerTouch,proto3" json:"consider_touch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Cut) Reset()         { *m = Params_Cut{} }
func (m *Params_Cut) String() string { return proto.CompactTextString(m) }
func (*Params_Cut) ProtoMessage()    {}
func (*Params_Cut) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 9}
}

func (m *Params_Cut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Cut.Unmarshal(m, b)
}
func (m *Params_Cut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Cut.Marshal(b, m, deterministic)
}
func (m *Params_Cut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Cut.Merge(m, src)
}
func (m *Params_Cut) XXX_Size() int {
	return xxx_messageInfo_Params_Cut.Size(m)
}
func (m *Params_Cut) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Cut.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Cut proto.InternalMessageInfo

func (m *Params_Cut) GetConsiderTouch() bool {
	if m != nil {
		return m.ConsiderTouch
	}
	return false
}

type Params_Clip struct {
	Envelope             *EnvelopeData `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Params_Clip) Reset()         { *m = Params_Clip{} }
func (m *Params_Clip) String() string { return proto.CompactTextString(m) }
func (*Params_Clip) ProtoMessage()    {}
func (*Params_Clip) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 10}
}

func (m *Params_Clip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Clip.Unmarshal(m, b)
}
func (m *Params_Clip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Clip.Marshal(b, m, deterministic)
}
func (m *Params_Clip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Clip.Merge(m, src)
}
func (m *Params_Clip) XXX_Size() int {
	return xxx_messageInfo_Params_Clip.Size(m)
}
func (m *Params_Clip) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Clip.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Clip proto.InternalMessageInfo

func (m *Params_Clip) GetEnvelope() *EnvelopeData {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type Params_Densify struct {
	MaxLength            float64  `protobuf:"fixed64,1,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Densify) Reset()         { *m = Params_Densify{} }
func (m *Params_Densify) String() string { return proto.CompactTextString(m) }
func (*Params_Densify) ProtoMessage()    {}
func (*Params_Densify) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 11}
}

func (m *Params_Densify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Densify.Unmarshal(m, b)
}
func (m *Params_Densify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Densify.Marshal(b, m, deterministic)
}
func (m *Params_Densify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Densify.Merge(m, src)
}
func (m *Params_Densify) XXX_Size() int {
	return xxx_messageInfo_Params_Densify.Size(m)
}
func (m *Params_Densify) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Densify.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Densify proto.InternalMessageInfo

func (m *Params_Densify) GetMaxLength() float64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

type Params_Simplify struct {
	Force                bool     `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_Simplify) Reset()         { *m = Params_Simplify{} }
func (m *Params_Simplify) String() string { return proto.CompactTextString(m) }
func (*Params_Simplify) ProtoMessage()    {}
func (*Params_Simplify) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 12}
}

func (m *Params_Simplify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_Simplify.Unmarshal(m, b)
}
func (m *Params_Simplify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_Simplify.Marshal(b, m, deterministic)
}
func (m *Params_Simplify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_Simplify.Merge(m, src)
}
func (m *Params_Simplify) XXX_Size() int {
	return xxx_messageInfo_Params_Simplify.Size(m)
}
func (m *Params_Simplify) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_Simplify.DiscardUnknown(m)
}

var xxx_messageInfo_Params_Simplify proto.InternalMessageInfo

func (m *Params_Simplify) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type Params_AffineTransform struct {
	Geodetic             bool     `protobuf:"varint,2,opt,name=geodetic,proto3" json:"geodetic,omitempty"`
	XOffset              float64  `protobuf:"fixed64,3,opt,name=x_offset,json=xOffset,proto3" json:"x_offset,omitempty"`
	YOffset              float64  `protobuf:"fixed64,4,opt,name=y_offset,json=yOffset,proto3" json:"y_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Params_AffineTransform) Reset()         { *m = Params_AffineTransform{} }
func (m *Params_AffineTransform) String() string { return proto.CompactTextString(m) }
func (*Params_AffineTransform) ProtoMessage()    {}
func (*Params_AffineTransform) Descriptor() ([]byte, []int) {
	return fileDescriptor_633d9a05b579beec, []int{7, 13}
}

func (m *Params_AffineTransform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Params_AffineTransform.Unmarshal(m, b)
}
func (m *Params_AffineTransform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Params_AffineTransform.Marshal(b, m, deterministic)
}
func (m *Params_AffineTransform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_AffineTransform.Merge(m, src)
}
func (m *Params_AffineTransform) XXX_Size() int {
	return xxx_messageInfo_Params_AffineTransform.Size(m)
}
func (m *Params_AffineTransform) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_AffineTransform.DiscardUnknown(m)
}

var xxx_messageInfo_Params_AffineTransform proto.InternalMessageInfo

func (m *Params_AffineTransform) GetGeodetic() bool {
	if m != nil {
		return m.Geodetic
	}
	return false
}

func (m *Params_AffineTransform) GetXOffset() float64 {
	if m != nil {
		return m.XOffset
	}
	return 0
}

func (m *Params_AffineTransform) GetYOffset() float64 {
	if m != nil {
		return m.YOffset
	}
	return 0
}

func init() {
	proto.RegisterEnum("epl.protobuf.v1.SimpleState", SimpleState_name, SimpleState_value)
	proto.RegisterEnum("epl.protobuf.v1.Encoding", Encoding_name, Encoding_value)
	proto.RegisterEnum("epl.protobuf.v1.OperatorType", OperatorType_name, OperatorType_value)
	proto.RegisterEnum("epl.protobuf.v1.ProjectionData_CSType", ProjectionData_CSType_name, ProjectionData_CSType_value)
	proto.RegisterEnum("epl.protobuf.v1.FileRequestChunk_FileType", FileRequestChunk_FileType_name, FileRequestChunk_FileType_value)
	proto.RegisterEnum("epl.protobuf.v1.Params_Offset_OffsetJoinType", Params_Offset_OffsetJoinType_name, Params_Offset_OffsetJoinType_value)
	proto.RegisterType((*GeometryData)(nil), "epl.protobuf.v1.GeometryData")
	proto.RegisterType((*ProjectionData)(nil), "epl.protobuf.v1.ProjectionData")
	proto.RegisterType((*ProjectionData_Custom)(nil), "epl.protobuf.v1.ProjectionData.Custom")
	proto.RegisterType((*EnvelopeData)(nil), "epl.protobuf.v1.EnvelopeData")
	proto.RegisterType((*GeometryRequest)(nil), "epl.protobuf.v1.GeometryRequest")
	proto.RegisterType((*GeodeticInverse)(nil), "epl.protobuf.v1.GeodeticInverse")
	proto.RegisterType((*GeometryResponse)(nil), "epl.protobuf.v1.GeometryResponse")
	proto.RegisterMapType((map[int64]bool)(nil), "epl.protobuf.v1.GeometryResponse.RelateMapEntry")
	proto.RegisterType((*FileRequestChunk)(nil), "epl.protobuf.v1.FileRequestChunk")
	proto.RegisterType((*Params)(nil), "epl.protobuf.v1.Params")
	proto.RegisterType((*Params_Buffer)(nil), "epl.protobuf.v1.Params.Buffer")
	proto.RegisterType((*Params_GeodeticBuffer)(nil), "epl.protobuf.v1.Params.GeodeticBuffer")
	proto.RegisterType((*Params_Convex)(nil), "epl.protobuf.v1.Params.Convex")
	proto.RegisterType((*Params_Relate)(nil), "epl.protobuf.v1.Params.Relate")
	proto.RegisterType((*Params_RandomPoints)(nil), "epl.protobuf.v1.Params.RandomPoints")
	proto.RegisterType((*Params_Generalize)(nil), "epl.protobuf.v1.Params.Generalize")
	proto.RegisterType((*Params_GeneralizeByArea)(nil), "epl.protobuf.v1.Params.GeneralizeByArea")
	proto.RegisterType((*Params_Intersection)(nil), "epl.protobuf.v1.Params.Intersection")
	proto.RegisterType((*Params_Offset)(nil), "epl.protobuf.v1.Params.Offset")
	proto.RegisterType((*Params_Cut)(nil), "epl.protobuf.v1.Params.Cut")
	proto.RegisterType((*Params_Clip)(nil), "epl.protobuf.v1.Params.Clip")
	proto.RegisterType((*Params_Densify)(nil), "epl.protobuf.v1.Params.Densify")
	proto.RegisterType((*Params_Simplify)(nil), "epl.protobuf.v1.Params.Simplify")
	proto.RegisterType((*Params_AffineTransform)(nil), "epl.protobuf.v1.Params.AffineTransform")
}

func init() {
	proto.RegisterFile("epl/protobuf/v1/geometry.proto", fileDescriptor_633d9a05b579beec)
}

var fileDescriptor_633d9a05b579beec = []byte{
	// 2766 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xdd, 0x76, 0xdb, 0x46,
	0x92, 0x16, 0x7f, 0x45, 0x16, 0x7f, 0xd4, 0x6a, 0xc9, 0x32, 0x4d, 0x27, 0xb6, 0xa2, 0xfc, 0x69,
	0x9d, 0x58, 0xb2, 0xe5, 0xec, 0x39, 0xeb, 0xdd, 0xec, 0x26, 0x24, 0x05, 0x8a, 0x90, 0x49, 0x80,
	0x69, 0x40, 0xfe, 0xc9, 0xc5, 0x62, 0x21, 0xb2, 0x49, 0xc3, 0x26, 0x01, 0x06, 0x00, 0xb5, 0x94,
	0x9f, 0x60, 0x9f, 0x60, 0xef, 0x67, 0x2e, 0x73, 0x39, 0xb7, 0x73, 0x9f, 0x07, 0x98, 0x57, 0x98,
	0x67, 0xc8, 0xe5, 0x9c, 0x33, 0xa7, 0x1a, 0x0d, 0x8a, 0x94, 0x2d, 0x45, 0x39, 0x73, 0x35, 0x57,
	0xea, 0xfe, 0xba, 0xea, 0xeb, 0xea, 0xaa, 0xea, 0xae, 0x02, 0x05, 0xf7, 0xf8, 0x64, 0xb4, 0x3f,
	0xf1, 0xbd, 0xd0, 0x3b, 0x9d, 0x0e, 0xf6, 0xcf, 0x1e, 0xef, 0x0f, 0xb9, 0x37, 0xe6, 0xa1, 0x7f,
	0xbe, 0x27, 0x40, 0xba, 0xc6, 0x27, 0xa3, 0xbd, 0x78, 0x7d, 0xef, 0xec, 0xf1, 0xce, 0xdf, 0x92,
	0x50, 0x3c, 0x92, 0x32, 0x87, 0x76, 0x68, 0xd3, 0xfb, 0x50, 0x88, 0x75, 0x2c, 0xa7, 0x5f, 0x49,
	0x6c, 0x27, 0x76, 0xd3, 0x0c, 0x62, 0x48, 0xed, 0xd3, 0x8f, 0x01, 0x06, 0xdc, 0x0e, 0xa7, 0x3e,
	0xc7, 0xf5, 0xe4, 0x76, 0x62, 0x37, 0xcf, 0xf2, 0x12, 0x51, 0xfb, 0x94, 0x42, 0xea, 0x7f, 0xdf,
	0x86, 0x95, 0x14, 0xe2, 0xad, 0x15, 0x86, 0x13, 0x5a, 0x85, 0xd5, 0x21, 0xf7, 0xde, 0x04, 0x9e,
	0x5b, 0x49, 0x4b, 0x3c, 0x06, 0x22, 0xf9, 0xd3, 0x4a, 0x66, 0x3b, 0xb1, 0x5b, 0x8c, 0xe4, 0x4f,
	0xe9, 0x7d, 0x00, 0x1e, 0xf8, 0x8e, 0x15, 0xbc, 0xb6, 0x27, 0xbc, 0x92, 0x95, 0x4b, 0x79, 0xc4,
	0x0c, 0x84, 0xe8, 0x26, 0xa4, 0x39, 0x6a, 0xad, 0xc9, 0x25, 0x31, 0xa3, 0x4f, 0x20, 0x3d, 0xf1,
	0xbd, 0x37, 0x95, 0xd5, 0xed, 0xc4, 0x6e, 0xe1, 0xe0, 0xfe, 0xde, 0xa5, 0xb3, 0xee, 0x75, 0x7d,
	0xef, 0x0d, 0xef, 0x85, 0x8e, 0xe7, 0xe2, 0x49, 0x99, 0x10, 0xa6, 0x4f, 0x21, 0xc7, 0xdd, 0x33,
	0x3e, 0xf2, 0x26, 0xbc, 0x52, 0x12, 0x8a, 0x1f, 0xbf, 0xa7, 0xa8, 0x48, 0x01, 0xa1, 0x36, 0x17,
	0xa7, 0xdf, 0x40, 0x36, 0x70, 0xc6, 0x93, 0x11, 0xaf, 0x94, 0xb7, 0x13, 0xbb, 0xe5, 0x83, 0x8f,
	0xde, 0x53, 0x34, 0xc4, 0xb2, 0x11, 0xda, 0x21, 0x67, 0x52, 0xb6, 0x9e, 0x85, 0x74, 0xdf, 0x0e,
	0xed, 0xe3, 0x74, 0x2e, 0x47, 0x4a, 0x3b, 0x7f, 0x48, 0x43, 0x79, 0xd9, 0x2e, 0x71, 0xb8, 0x49,
	0x30, 0x14, 0xae, 0xcf, 0x88, 0xc3, 0x4d, 0x82, 0x21, 0xdd, 0x82, 0x0c, 0xda, 0xfb, 0x4d, 0xe4,
	0xf1, 0xd6, 0x0a, 0x8b, 0xa6, 0xf4, 0x7b, 0xc8, 0xf6, 0xa6, 0x41, 0xe8, 0x8d, 0x85, 0xcb, 0x0b,
	0x07, 0x5f, 0xfc, 0xc6, 0xb1, 0xf7, 0x1a, 0x42, 0xba, 0xb5, 0xc2, 0xa4, 0x5e, 0x1c, 0xb1, 0xf4,
	0x62, 0xc4, 0x9e, 0x42, 0x2e, 0x0e, 0x79, 0x05, 0xae, 0xf0, 0xca, 0x62, 0xda, 0xb0, 0xb9, 0x38,
	0x7d, 0x0c, 0xe9, 0xd3, 0x53, 0x6f, 0x56, 0x29, 0xdc, 0xc4, 0x99, 0x42, 0x14, 0x77, 0xeb, 0x71,
	0x37, 0xf4, 0x3d, 0xa7, 0x5f, 0x29, 0xde, 0x68, 0xb7, 0x58, 0x9c, 0x6e, 0x42, 0x26, 0xca, 0x92,
	0xdc, 0x76, 0x6a, 0xb7, 0xc4, 0xa2, 0x09, 0xfd, 0x08, 0xf2, 0xa1, 0x6f, 0xbb, 0xc1, 0xc0, 0xf3,
	0xc7, 0x95, 0xfc, 0x76, 0x6a, 0x37, 0xc1, 0x2e, 0x80, 0x6a, 0x00, 0xd9, 0xc8, 0x09, 0x74, 0x03,
	0x32, 0x23, 0xcf, 0xb5, 0x1e, 0x09, 0x5f, 0x27, 0x58, 0x7a, 0xe4, 0xb9, 0x8f, 0x04, 0x68, 0x87,
	0xd6, 0x23, 0xe1, 0x69, 0x04, 0xed, 0xf0, 0x11, 0xfd, 0x0e, 0x56, 0x7b, 0x81, 0x15, 0x9e, 0x4f,
	0xb8, 0xf0, 0x73, 0xf9, 0x06, 0x7e, 0x36, 0xcc, 0xf3, 0x09, 0x67, 0xd9, 0x5e, 0x80, 0x7f, 0x77,
	0xee, 0x40, 0x36, 0x42, 0xe8, 0x1a, 0x14, 0xda, 0xb5, 0x4e, 0x5d, 0x61, 0xa6, 0x55, 0xfb, 0x51,
	0x25, 0x2b, 0xf5, 0x22, 0x40, 0x9f, 0x0f, 0x1c, 0xd7, 0x41, 0xdd, 0xe3, 0x74, 0x2e, 0x43, 0xb2,
	0xc7, 0xe9, 0x5c, 0x96, 0xac, 0x1e, 0xa7, 0x73, 0xab, 0x24, 0xb7, 0xf3, 0xe7, 0x04, 0x14, 0x17,
	0xbd, 0x46, 0x29, 0xa4, 0x67, 0x63, 0xc7, 0x8d, 0xad, 0xc6, 0x31, 0x62, 0xe7, 0x88, 0x49, 0xa3,
	0xcf, 0x25, 0x36, 0x1b, 0xdb, 0x33, 0x61, 0xb1, 0x90, 0xb3, 0x67, 0x91, 0x9c, 0x3d, 0x13, 0xe1,
	0x16, 0x72, 0xf6, 0x6c, 0x7e, 0x71, 0x32, 0xbf, 0xe7, 0xe2, 0x50, 0x48, 0xbf, 0xc3, 0x0d, 0xb3,
	0x11, 0xd1, 0x3b, 0xb9, 0xe1, 0x3b, 0x24, 0x5f, 0x8d, 0x31, 0x7b, 0xb6, 0xf3, 0xd7, 0x32, 0xac,
	0xc5, 0xc1, 0x63, 0xfc, 0xa7, 0x29, 0x0f, 0x42, 0xfa, 0x1f, 0x0b, 0xe9, 0x95, 0xb8, 0x41, 0xc0,
	0x5b, 0x2b, 0x0b, 0x09, 0x76, 0x08, 0xa5, 0x11, 0x1f, 0x84, 0xd6, 0x9c, 0x21, 0x79, 0x33, 0x86,
	0x22, 0x6a, 0xc5, 0x18, 0xed, 0x00, 0x99, 0xbf, 0x73, 0x7e, 0x64, 0x96, 0xbc, 0x41, 0xdb, 0x57,
	0x12, 0x49, 0xf3, 0x5b, 0x2b, 0x6c, 0x6d, 0x78, 0xe9, 0x44, 0xcf, 0xe1, 0xd6, 0x92, 0x51, 0x73,
	0xce, 0xf4, 0x8d, 0x39, 0x37, 0x16, 0xed, 0x8b, 0x79, 0x9b, 0x50, 0xf6, 0x9d, 0xe1, 0xeb, 0x85,
	0xd3, 0x66, 0x6e, 0x72, 0xda, 0x04, 0x2b, 0x09, 0xb5, 0xf9, 0x71, 0x5f, 0xc2, 0xd6, 0x32, 0xcf,
	0xdc, 0xc0, 0xec, 0x0d, 0x0d, 0x4c, 0xb0, 0xcd, 0x25, 0xca, 0xd8, 0xc2, 0xa7, 0x90, 0xf3, 0x26,
	0xdc, 0xb7, 0x43, 0xcf, 0x17, 0x71, 0x2f, 0x7f, 0xc0, 0x36, 0x5d, 0x0a, 0x88, 0x1b, 0x31, 0x17,
	0xa7, 0x75, 0x58, 0xf3, 0x79, 0x30, 0x1d, 0x85, 0x16, 0x77, 0x7b, 0x5e, 0xdf, 0x71, 0x87, 0x95,
	0x9c, 0x60, 0xb8, 0xf3, 0x81, 0x57, 0x23, 0x12, 0x60, 0xe5, 0x48, 0x23, 0x9e, 0xa3, 0x83, 0x22,
	0x3e, 0xc7, 0x73, 0x2d, 0x91, 0xc5, 0xf9, 0x9b, 0x65, 0x71, 0x69, 0xae, 0x86, 0x0b, 0xf4, 0x7b,
	0x28, 0x48, 0x5b, 0x04, 0x09, 0xdc, 0x8c, 0x04, 0x22, 0x1d, 0xc1, 0xa0, 0x40, 0xe9, 0x74, 0x3a,
	0x18, 0x70, 0xdf, 0x9a, 0xd8, 0xbe, 0x3d, 0x0e, 0xe4, 0x0b, 0x78, 0xef, 0x7d, 0x0e, 0xb1, 0xbc,
	0x57, 0x17, 0xc2, 0xad, 0x24, 0x2b, 0x46, 0x6a, 0x11, 0x8c, 0x34, 0x3d, 0xcf, 0x3d, 0xe3, 0xb3,
	0x98, 0xa6, 0x78, 0x3d, 0x4d, 0x43, 0x08, 0x23, 0x4d, 0xa4, 0x76, 0x41, 0xe3, 0xf3, 0x91, 0x1d,
	0xf2, 0x98, 0xa6, 0x74, 0x3d, 0x0d, 0x13, 0xc2, 0x48, 0x13, 0xa9, 0x49, 0x9a, 0x97, 0xb0, 0xe9,
	0xdb, 0x6e, 0xdf, 0x1b, 0x5b, 0x13, 0xcf, 0x71, 0xc3, 0x20, 0x66, 0x2b, 0x0b, 0xb6, 0xcf, 0xae,
	0x64, 0x13, 0x3a, 0x5d, 0xa1, 0xd2, 0x4a, 0x32, 0xea, 0x2f, 0xcc, 0x25, 0xf3, 0x0f, 0xb0, 0x3e,
	0xe4, 0x2e, 0xf7, 0xed, 0x91, 0xf3, 0x6e, 0x6e, 0xe4, 0x9a, 0xa0, 0xdd, 0xb9, 0x8a, 0xf6, 0x68,
	0xae, 0xd0, 0x4a, 0x32, 0x72, 0xa1, 0x2e, 0x29, 0x5f, 0xc0, 0x86, 0xe3, 0x86, 0xdc, 0x0f, 0xa2,
	0x08, 0xc5, 0xa4, 0xe4, 0x7a, 0x5b, 0xd5, 0x05, 0x15, 0xb4, 0x75, 0x91, 0xe2, 0xc2, 0x99, 0xde,
	0x60, 0x10, 0xf0, 0x30, 0xa6, 0x5c, 0xbf, 0xde, 0x99, 0xba, 0x10, 0x46, 0x67, 0x46, 0x6a, 0x92,
	0xe6, 0x5b, 0x80, 0xde, 0x74, 0xce, 0x41, 0x05, 0xc7, 0xdd, 0x2b, 0xe3, 0x3a, 0x45, 0x82, 0x7c,
	0x6f, 0x1a, 0x6b, 0x7f, 0x07, 0x85, 0xde, 0xc8, 0x99, 0xc4, 0xea, 0x1b, 0x42, 0xfd, 0xa3, 0x2b,
	0xd5, 0x47, 0xce, 0xa4, 0x95, 0x64, 0x80, 0x2a, 0x92, 0xa0, 0x05, 0xe5, 0x3e, 0x77, 0x03, 0x67,
	0x70, 0x1e, 0x73, 0x6c, 0x5e, 0x95, 0xe5, 0x11, 0xc7, 0x61, 0x24, 0xdd, 0x4a, 0xb2, 0x92, 0x54,
	0x94, 0x4c, 0xcf, 0x60, 0x4d, 0x74, 0x33, 0x0b, 0x54, 0xb7, 0xae, 0x78, 0x46, 0x24, 0x95, 0x21,
	0xc5, 0x5b, 0x49, 0x56, 0x8e, 0x55, 0x25, 0x19, 0x87, 0x3b, 0x0b, 0x89, 0x70, 0x7a, 0x6e, 0xd9,
	0x3e, 0xb7, 0x63, 0xda, 0x2d, 0x41, 0xbb, 0xfb, 0xdb, 0x09, 0x51, 0x3f, 0xaf, 0xf9, 0xdc, 0x6e,
	0x25, 0xd9, 0xd6, 0xf0, 0x12, 0x26, 0xb7, 0xb1, 0xe1, 0xb6, 0x3d, 0x18, 0x38, 0x2e, 0xb7, 0xe6,
	0x9d, 0x40, 0xbc, 0xc9, 0x6d, 0xb1, 0xc9, 0x97, 0x57, 0x6d, 0x52, 0x13, 0x6a, 0x66, 0xac, 0xd5,
	0x4a, 0xb2, 0x5b, 0xf6, 0x32, 0x24, 0xb7, 0xf8, 0x6f, 0xd8, 0x1a, 0x72, 0xaf, 0xcf, 0x43, 0xa7,
	0x67, 0x2d, 0x3f, 0x05, 0x95, 0xab, 0x7a, 0xb3, 0xf8, 0x18, 0x91, 0xd6, 0xfc, 0x49, 0xd8, 0x1c,
	0x2e, 0x21, 0x91, 0x18, 0xb6, 0x8e, 0x58, 0x23, 0xea, 0xab, 0x90, 0x11, 0x4f, 0x71, 0x3d, 0x07,
	0xd9, 0x68, 0x83, 0x9d, 0x13, 0x51, 0x64, 0x85, 0x8a, 0xea, 0x9e, 0x61, 0xfe, 0x62, 0x31, 0xb6,
	0xdf, 0x3d, 0x3e, 0x88, 0xbb, 0x04, 0x1c, 0x47, 0xd8, 0xc1, 0xe3, 0xb8, 0x4b, 0xc0, 0x31, 0xad,
	0x42, 0xae, 0xef, 0x04, 0xa1, 0xed, 0xf6, 0xb8, 0xec, 0x14, 0xe6, 0xf3, 0x9d, 0xff, 0x4b, 0x01,
	0xb9, 0x78, 0xf0, 0x83, 0x89, 0xe7, 0x06, 0xfc, 0x1f, 0xab, 0xde, 0x4f, 0x60, 0x33, 0x98, 0xd8,
	0xa1, 0x63, 0x8f, 0x2c, 0xf1, 0xd0, 0x38, 0x9e, 0x1b, 0xbc, 0x76, 0x26, 0xc2, 0xa2, 0x1c, 0x56,
	0x41, 0xb9, 0xca, 0x16, 0x16, 0xf1, 0x03, 0x62, 0xcc, 0xed, 0x60, 0xea, 0x4b, 0x0b, 0xf1, 0x03,
	0x42, 0x02, 0xb2, 0x90, 0x47, 0x4e, 0x77, 0xa2, 0xa3, 0x5f, 0x57, 0x74, 0x17, 0x5d, 0x24, 0x0b,
	0xf9, 0x92, 0xd7, 0x74, 0x00, 0xf9, 0x6e, 0x8e, 0xed, 0x49, 0x25, 0xb3, 0x9d, 0xda, 0x2d, 0x1c,
	0x3c, 0xba, 0xa6, 0x38, 0x46, 0x3e, 0x91, 0xcf, 0x67, 0xc7, 0x9e, 0x28, 0x2e, 0xc2, 0x79, 0x3f,
	0x9e, 0x57, 0xbf, 0x85, 0xf2, 0xf2, 0x22, 0x25, 0x90, 0x7a, 0xcb, 0x23, 0xd7, 0xa5, 0x18, 0x0e,
	0xb1, 0x8b, 0x3d, 0xb3, 0x47, 0x53, 0x1e, 0x79, 0x81, 0x45, 0x93, 0x7f, 0x4f, 0xfe, 0x5b, 0x02,
	0x23, 0x1c, 0x95, 0x98, 0x9d, 0x5f, 0x52, 0x40, 0x9a, 0xce, 0x88, 0xcb, 0xba, 0xdb, 0x78, 0x3d,
	0x75, 0xdf, 0xd2, 0x23, 0x28, 0xbb, 0x3c, 0x08, 0x79, 0x7f, 0x5e, 0xce, 0x13, 0x37, 0x2b, 0xe7,
	0xac, 0x14, 0xe9, 0xc5, 0x55, 0xfc, 0x19, 0x6c, 0x5e, 0x2a, 0xc5, 0x51, 0xb3, 0x9b, 0xfc, 0xad,
	0x7a, 0x4c, 0x97, 0xeb, 0xb1, 0xe8, 0x70, 0xff, 0x0b, 0xc0, 0x71, 0x27, 0x53, 0x59, 0x4a, 0x53,
	0x37, 0x2b, 0xa5, 0x79, 0xa1, 0xf2, 0xa1, 0x5a, 0x9c, 0xf9, 0xfd, 0xb5, 0x98, 0x46, 0x1f, 0x59,
	0xd1, 0xb7, 0x23, 0x13, 0x63, 0xc4, 0x02, 0xe7, 0x1d, 0x17, 0x4d, 0x4a, 0x8a, 0x89, 0x31, 0xdd,
	0x82, 0x6c, 0xf4, 0x42, 0x8b, 0xc6, 0x23, 0xc5, 0xe4, 0x8c, 0xde, 0x85, 0xfc, 0xc0, 0x19, 0x71,
	0xcb, 0xb5, 0xc7, 0x5c, 0x34, 0x14, 0x79, 0x96, 0x43, 0x40, 0xb3, 0xc7, 0x9c, 0xee, 0x40, 0xc9,
	0x09, 0xac, 0x91, 0x1d, 0x84, 0x56, 0x0f, 0xa3, 0x20, 0x9a, 0x85, 0x1c, 0x2b, 0x38, 0x41, 0xdb,
	0x96, 0x81, 0xd9, 0xb9, 0x03, 0x39, 0x0c, 0x96, 0x70, 0x47, 0x09, 0xf2, 0x46, 0xab, 0xd6, 0x55,
	0x9a, 0x6a, 0x5b, 0x21, 0x2b, 0x3b, 0x7f, 0x01, 0xc8, 0x46, 0x17, 0xba, 0xfa, 0x73, 0x02, 0xb2,
	0xd1, 0x0d, 0x5f, 0xba, 0x85, 0x89, 0xe5, 0x5b, 0x48, 0x3f, 0x85, 0xd2, 0xd8, 0x9e, 0x59, 0x7d,
	0x7e, 0xe6, 0x88, 0x3b, 0x21, 0xaf, 0x6f, 0x71, 0x6c, 0xcf, 0x0e, 0x63, 0x8c, 0x7e, 0x02, 0xc5,
	0xa9, 0x8b, 0x55, 0x2f, 0x72, 0x83, 0x70, 0x7b, 0x8e, 0x15, 0x04, 0xc6, 0x04, 0x44, 0xbf, 0x85,
	0xbb, 0xc8, 0x73, 0xc6, 0xfd, 0xd0, 0xe9, 0xf1, 0xc0, 0x72, 0x5c, 0x6b, 0x30, 0x1d, 0x8d, 0xac,
	0x9e, 0xe3, 0xf7, 0x46, 0xd1, 0xad, 0xc9, 0xb0, 0xdb, 0x63, 0x7b, 0xf6, 0x5c, 0x4a, 0xa8, 0x6e,
	0x73, 0x3a, 0x1a, 0x35, 0xc4, 0x72, 0xf5, 0x4f, 0x09, 0x28, 0x2f, 0x3f, 0x54, 0xff, 0x04, 0x46,
	0xdf, 0x83, 0x6c, 0xd4, 0x20, 0xe1, 0x1d, 0x1b, 0x73, 0x7f, 0x18, 0x19, 0x9a, 0x63, 0xd1, 0xa4,
	0x7a, 0x1f, 0xb2, 0xd1, 0xed, 0xa4, 0xb7, 0x20, 0xdb, 0xe7, 0xd6, 0x53, 0x67, 0x2c, 0x04, 0xf2,
	0x2c, 0xd3, 0xe7, 0x4f, 0x9d, 0x71, 0xd5, 0x80, 0xe2, 0x62, 0x33, 0x43, 0xf7, 0x61, 0x33, 0xee,
	0x84, 0xb8, 0x6f, 0x05, 0x3f, 0x4d, 0x6d, 0x9f, 0x5b, 0x6f, 0xc7, 0xf2, 0xf8, 0xeb, 0xd1, 0x5a,
	0x97, 0xfb, 0x86, 0x58, 0x79, 0x36, 0x16, 0x69, 0xc7, 0x79, 0xf4, 0x4b, 0x09, 0xa6, 0x1d, 0xe7,
	0xfd, 0xea, 0xff, 0x00, 0x5c, 0x54, 0xae, 0xf7, 0x3d, 0x95, 0xf8, 0x80, 0xa7, 0x1e, 0x02, 0xf5,
	0xf9, 0xd8, 0x3b, 0xe3, 0x56, 0x9f, 0x47, 0x15, 0x2e, 0xe4, 0x81, 0x7c, 0x2f, 0xd6, 0xa3, 0x95,
	0xc3, 0x8b, 0x85, 0xea, 0xff, 0x27, 0xf0, 0xe1, 0x5e, 0x2e, 0x84, 0xf4, 0x2b, 0x58, 0x9f, 0x70,
	0x1f, 0xbf, 0x9d, 0x2d, 0x9f, 0xf7, 0xa7, 0xbd, 0x85, 0xcd, 0x88, 0x5c, 0x60, 0x31, 0x4e, 0xbf,
	0x80, 0x35, 0xb4, 0x4a, 0x1c, 0xc8, 0xea, 0x79, 0x53, 0x37, 0x14, 0xbb, 0x65, 0x18, 0x1a, 0x2b,
	0x9c, 0xd1, 0x40, 0xf0, 0x0a, 0xc3, 0x52, 0x57, 0x19, 0xf6, 0xaf, 0x50, 0x5c, 0x6c, 0xb8, 0xe8,
	0xe7, 0x50, 0xee, 0x3b, 0x63, 0xec, 0x2e, 0x3c, 0xd7, 0x1a, 0xdb, 0xc1, 0xdb, 0xe8, 0x77, 0x0f,
	0x56, 0x9a, 0xa3, 0x1d, 0x3b, 0x78, 0x5b, 0xfd, 0x35, 0x01, 0xd9, 0xa8, 0xab, 0xba, 0x36, 0xe9,
	0x8e, 0x21, 0xff, 0xc6, 0x73, 0xdc, 0xc5, 0xb7, 0xeb, 0xe1, 0xf5, 0x4d, 0x9a, 0xfc, 0x73, 0xec,
	0x39, 0x6e, 0xf4, 0x75, 0xf2, 0x46, 0x8e, 0xe8, 0x7d, 0x28, 0x9c, 0xf2, 0x33, 0x3e, 0xb2, 0xc4,
	0x57, 0x82, 0x2c, 0x8d, 0x20, 0x20, 0x86, 0x08, 0xc6, 0x6d, 0x30, 0xb2, 0xc3, 0x90, 0xbb, 0x16,
	0xf7, 0x7d, 0xcf, 0x97, 0xdf, 0xd4, 0x45, 0x09, 0x2a, 0x88, 0xed, 0xfc, 0x27, 0x94, 0x97, 0x77,
	0xa0, 0x79, 0xc8, 0x30, 0xfd, 0x44, 0x3b, 0x24, 0x2b, 0x38, 0xac, 0x2b, 0xcf, 0x95, 0x36, 0x49,
	0xe0, 0xb0, 0xa3, 0x9a, 0x0a, 0x23, 0x49, 0x0a, 0x90, 0x35, 0x7e, 0x38, 0xa9, 0x31, 0x85, 0xa4,
	0xaa, 0x5f, 0x43, 0xaa, 0x31, 0x0d, 0xd1, 0x4b, 0x3d, 0xcf, 0x0d, 0x9c, 0x3e, 0xf7, 0xad, 0xd0,
	0x9b, 0xf6, 0x5e, 0xcb, 0x2c, 0x2e, 0xc5, 0xa8, 0x89, 0x60, 0xb5, 0x06, 0x69, 0xec, 0xfb, 0x96,
	0x7e, 0xd4, 0x4a, 0xfc, 0xae, 0x1f, 0xb5, 0xaa, 0xbb, 0xb0, 0x2a, 0xdb, 0x3e, 0xfa, 0x31, 0x00,
	0x66, 0xc0, 0x88, 0xbb, 0xc3, 0xf0, 0xb5, 0x74, 0x75, 0x7e, 0x6c, 0xcf, 0xda, 0x02, 0xa8, 0x6e,
	0x43, 0x2e, 0xee, 0xea, 0xf0, 0x72, 0x0d, 0x3c, 0xbf, 0x37, 0xbf, 0x5c, 0x62, 0x52, 0x75, 0x60,
	0xed, 0x52, 0xef, 0x84, 0xc1, 0x8b, 0x2b, 0xae, 0x4c, 0xde, 0xf9, 0x9c, 0xde, 0x81, 0xdc, 0xcc,
	0x92, 0xcf, 0x71, 0xe4, 0xed, 0xd5, 0x99, 0x8c, 0xf9, 0x1d, 0xc8, 0x9d, 0xc7, 0x4b, 0x91, 0x97,
	0x57, 0xcf, 0xa5, 0x5b, 0xd3, 0xb9, 0x04, 0x49, 0x3e, 0xf8, 0x25, 0x01, 0x85, 0x85, 0x5f, 0xdb,
	0x28, 0x85, 0xb2, 0xa1, 0x76, 0xba, 0x6d, 0xc5, 0x3a, 0xd1, 0x9e, 0x69, 0xfa, 0x0b, 0x8d, 0xac,
	0xd0, 0x35, 0x28, 0xbc, 0x50, 0x6a, 0xcf, 0xac, 0x68, 0x81, 0x24, 0xe8, 0x3a, 0x94, 0x0c, 0x93,
	0xe9, 0xda, 0x51, 0x0c, 0x25, 0x69, 0x19, 0x40, 0xd3, 0xb5, 0x78, 0x9e, 0x12, 0x3c, 0x26, 0x3b,
	0x69, 0x98, 0x27, 0x4c, 0xb1, 0x9a, 0xed, 0xda, 0x0b, 0x92, 0xa6, 0xb7, 0x61, 0xe3, 0x50, 0x39,
	0x52, 0x34, 0x85, 0xd5, 0x4c, 0xc5, 0x32, 0x94, 0xa3, 0x8e, 0xa2, 0x99, 0x06, 0xc9, 0xa0, 0x72,
	0xa3, 0x7d, 0x62, 0x98, 0x0a, 0x53, 0xb5, 0x23, 0x92, 0xa5, 0x45, 0xc8, 0x35, 0x58, 0xad, 0xf1,
	0x0c, 0x67, 0xab, 0x62, 0x95, 0xe9, 0x86, 0x61, 0xe9, 0xcf, 0x15, 0x46, 0x72, 0x74, 0x13, 0x08,
	0xca, 0x59, 0x3a, 0x53, 0x15, 0xcd, 0xac, 0x99, 0xaa, 0xae, 0x91, 0xfc, 0x83, 0x57, 0x90, 0x9b,
	0x7f, 0xdb, 0x6e, 0x02, 0x91, 0xd6, 0x5b, 0x8a, 0xd6, 0xd0, 0x0f, 0x91, 0x67, 0x85, 0xae, 0x42,
	0xea, 0xc5, 0xb3, 0x3a, 0x49, 0x44, 0x03, 0x93, 0x24, 0x69, 0x01, 0x56, 0x8f, 0x14, 0xfd, 0xd8,
	0xd0, 0x35, 0x92, 0xc2, 0x6d, 0x14, 0x83, 0xa9, 0x96, 0x28, 0x39, 0x24, 0x4d, 0x73, 0x90, 0x56,
	0x50, 0x3e, 0xf3, 0xe0, 0xd7, 0x2c, 0x14, 0x17, 0xbf, 0xc4, 0x17, 0xf9, 0xf5, 0x2e, 0x9e, 0x46,
	0x67, 0x64, 0x05, 0xd9, 0xba, 0x4c, 0x3f, 0x56, 0x1a, 0x26, 0x49, 0xe0, 0xf9, 0x95, 0x97, 0x5d,
	0x9d, 0x99, 0x96, 0xa9, 0x5b, 0x62, 0x87, 0x24, 0xaa, 0xa9, 0x1d, 0x81, 0x35, 0x99, 0xde, 0xb1,
	0xe4, 0xbe, 0x15, 0xd8, 0xbc, 0x90, 0x5c, 0xb2, 0xa0, 0x0a, 0x5b, 0x8b, 0xf2, 0x0b, 0x6b, 0x19,
	0x4c, 0xfb, 0x13, 0x0d, 0x4f, 0x9e, 0x45, 0xc3, 0x0f, 0xd5, 0x66, 0x53, 0x61, 0x8a, 0xd6, 0x50,
	0xc8, 0x2a, 0x25, 0x50, 0xec, 0x32, 0xfd, 0xa5, 0xda, 0x51, 0xcd, 0x57, 0xd6, 0xc1, 0x21, 0xc9,
	0xe1, 0xc5, 0x60, 0x4a, 0xbb, 0x66, 0x2a, 0x24, 0x8f, 0x63, 0xe5, 0x87, 0x93, 0x5a, 0xdb, 0x20,
	0x80, 0x7e, 0x3e, 0x54, 0x8d, 0x63, 0x5d, 0xd5, 0x4c, 0x52, 0x40, 0x1e, 0x55, 0x33, 0x15, 0x66,
	0x28, 0x0d, 0xd3, 0x20, 0x45, 0x94, 0x7c, 0xa1, 0x9a, 0x2d, 0x55, 0x23, 0x25, 0x11, 0x11, 0x5d,
	0x33, 0x6b, 0xaa, 0x66, 0x90, 0x32, 0x9e, 0x54, 0x44, 0x44, 0x31, 0xc8, 0x1a, 0x4e, 0x4c, 0xfd,
	0xa4, 0xd1, 0x52, 0x0c, 0x42, 0x50, 0x0e, 0xa3, 0xd4, 0xae, 0x75, 0x0d, 0xb2, 0x8e, 0x0c, 0xf5,
	0x13, 0xb4, 0x8c, 0x50, 0xb9, 0x97, 0x59, 0x43, 0x1b, 0x37, 0xd0, 0xc6, 0xf9, 0x5e, 0x78, 0x8a,
	0x4d, 0x74, 0x77, 0xa3, 0xad, 0x76, 0xc9, 0x2d, 0x0c, 0x4f, 0xe3, 0xc4, 0x24, 0x5b, 0xf4, 0x16,
	0xac, 0x1f, 0x2a, 0x9a, 0xa1, 0x36, 0x5f, 0x59, 0xf5, 0x57, 0x56, 0x5b, 0xd1, 0x8e, 0xcc, 0x16,
	0xb9, 0x4d, 0x37, 0x60, 0xed, 0x48, 0xd1, 0x0f, 0x15, 0x43, 0x6d, 0x58, 0x92, 0xbe, 0x4a, 0xef,
	0x41, 0x55, 0x80, 0xa6, 0xda, 0xb0, 0xde, 0x57, 0xba, 0x8b, 0x29, 0x3b, 0x5f, 0xaf, 0x31, 0xa5,
	0x46, 0xee, 0xa1, 0x45, 0x22, 0x5d, 0xd5, 0xe6, 0x2b, 0x72, 0x1f, 0x2d, 0x8a, 0x67, 0x96, 0x7e,
	0xd4, 0x20, 0xdb, 0x68, 0xbd, 0xde, 0x6c, 0x1a, 0x8a, 0x49, 0x3e, 0x41, 0xdf, 0x44, 0x89, 0xdb,
	0x56, 0x7f, 0x54, 0xc8, 0x0e, 0xdd, 0x02, 0x7a, 0x31, 0xc7, 0x8d, 0x04, 0xe7, 0xa7, 0xb8, 0xcd,
	0x45, 0x30, 0x31, 0x7b, 0x3e, 0x43, 0x73, 0x17, 0xa3, 0x88, 0xe0, 0xe7, 0x97, 0xe5, 0x4c, 0xf2,
	0xc5, 0xfb, 0x72, 0x26, 0xf9, 0x12, 0xaf, 0xcc, 0x22, 0x18, 0x67, 0xeb, 0x2e, 0xfa, 0xe6, 0x82,
	0x20, 0x86, 0xff, 0x05, 0x93, 0xc9, 0x78, 0xd5, 0xe9, 0x28, 0x26, 0x43, 0x3f, 0x5c, 0x64, 0xc5,
	0x03, 0xbc, 0xc4, 0x0d, 0x5d, 0x7b, 0xae, 0xbc, 0xb4, 0x5a, 0x27, 0xed, 0x36, 0xf9, 0x0a, 0x8f,
	0x5f, 0xc7, 0xe7, 0xb4, 0xc6, 0x5e, 0x91, 0xaf, 0xd1, 0x20, 0x56, 0xd3, 0x0e, 0xf5, 0x8e, 0xd5,
	0xc5, 0x74, 0x30, 0xc8, 0x43, 0x4c, 0x57, 0x45, 0x6b, 0xb4, 0x75, 0x03, 0x2f, 0x5b, 0x43, 0x65,
	0x8d, 0xb6, 0x42, 0xf6, 0x10, 0xad, 0x35, 0x9b, 0xaa, 0xa6, 0x58, 0x26, 0xab, 0x69, 0x46, 0x53,
	0x67, 0x1d, 0xb2, 0x3f, 0x8f, 0x09, 0xba, 0x57, 0xfa, 0xfc, 0x11, 0x8a, 0xce, 0x41, 0x55, 0x7b,
	0x8e, 0xd1, 0x26, 0x8f, 0x97, 0x6f, 0x86, 0xb8, 0x61, 0x07, 0x97, 0x6f, 0x86, 0x40, 0x9f, 0xd4,
	0x03, 0xd8, 0xe8, 0x79, 0xe3, 0xcb, 0x0f, 0x70, 0xbd, 0x14, 0xb7, 0xe4, 0x5d, 0x04, 0xbb, 0x89,
	0x1f, 0xf7, 0x86, 0x4e, 0xf8, 0x7a, 0x7a, 0xba, 0xd7, 0xf3, 0xc6, 0xfb, 0x43, 0xee, 0x3d, 0x1c,
	0xfa, 0x93, 0xde, 0xbe, 0x3d, 0x71, 0xf6, 0x87, 0xde, 0xc8, 0x76, 0x87, 0xfb, 0x97, 0xfe, 0xb7,
	0xf3, 0xc7, 0x64, 0xfa, 0xa8, 0xd3, 0xad, 0xff, 0x9c, 0xfc, 0x10, 0xfb, 0x69, 0x56, 0x4c, 0x9e,
	0xfc, 0x3d, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x38, 0xec, 0xf7, 0x12, 0x1a, 0x00, 0x00,
}
