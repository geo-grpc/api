/*
Copyright 2017-2019 Echo Park Labs

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

For additional information, contact:

email: info@echoparklabs.io
*/

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.epl.protobuf";
option java_outer_classname = "StacServiceProto";
option objc_class_prefix = "STS";
option go_package = "github.com/geo-grpc/api/golang/epl/protobuf";

package epl.protobuf;

import "epl/protobuf/stac.proto";

/*
 gRPC Interfaces for working with stac metadata
*/
service StacService {
    /*
    using a search request, stream all the results that match the search filter
    */
    rpc Search(epl.protobuf.StacRequest) returns (stream epl.protobuf.StacItem) {}
    /*
    insert a stream of items into the STAC service
    */
    rpc Insert(stream epl.protobuf.StacItem) returns (stream epl.protobuf.StacDbResponse) {}
    /*
    update a stream of items in the STAC service
    */
    rpc Update(stream epl.protobuf.StacItem) returns (stream epl.protobuf.StacDbResponse) {}

    /*
    count all the items in the Stac service according to the StacRequest filter
    */
    rpc Count(epl.protobuf.StacRequest) returns (epl.protobuf.StacDbResponse) {}
    /*
    delete an item from the STAC service
    */
    rpc DeleteOne(epl.protobuf.StacItem) returns (epl.protobuf.StacDbResponse) {}
    /*
    using a search request get the first item that matches the request
    */
    rpc SearchOne(epl.protobuf.StacRequest) returns (epl.protobuf.StacItem) {}
    /*
    Insert one item into the STAC service
    */
    rpc InsertOne(epl.protobuf.StacItem) returns (epl.protobuf.StacDbResponse) {}
    /*
    Update one item in the STAC service
    */
    rpc UpdateOne(epl.protobuf.StacItem) returns (epl.protobuf.StacDbResponse) {}
}
